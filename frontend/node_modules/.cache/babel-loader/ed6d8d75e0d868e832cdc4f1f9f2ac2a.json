{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\src\\\\components\\\\layout\\\\tabs\\\\MyListTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { IMG_BASE_URL, LOCAL_STORAGE_KEY, watchStatus, COLORS_BORDER_LEFT_STATUS } from '../../strings';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nexport default function MyListTab() {\n  _s();\n\n  const [myMovies, setMyMovies] = useState([]);\n  const [key, setKey] = useState('All');\n  useEffect(() => {\n    const storedMovies = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    console.log(storedMovies);\n    if (storedMovies) setMyMovies(storedMovies);\n  }, []);\n\n  const determineColorStatus = statusWatching => {\n    for (let i = 0; i < watchStatus.length; i++) {\n      switch (statusWatching) {\n        case watchStatus[i]:\n          return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7);\n      }\n    }\n  };\n\n  const showRatingNumber = rating => {\n    // Check if the third character in the string is a 0, because if it is then the rating is 10\n    // else it will be the ')' bracket for which we have to return the second character in the string\n    if (rating.charAt(2) == \"0\") {\n      return rating.charAt(1) + rating.charAt(2);\n    } else {\n      return rating.charAt(1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading-page\",\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), myMovies.length ?\n    /*#__PURE__*/\n    // If length of movies array is not 0 then return table of movies\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"All\",\n        id: \"controlled-tab-example\",\n        activeKey: key,\n        onSelect: k => setKey(k),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"All\",\n          title: \"All Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), watchStatus.map(status => {\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: status,\n            title: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-my-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '20px',\n                textAlign: 'center'\n              },\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '70px',\n                textAlign: 'center'\n              },\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '120px'\n              },\n              children: \"Date added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '100px',\n                textAlign: 'center'\n              },\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), myMovies.map((movie, index) => {\n          // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\n          if (movie.userStats.status == key || key == \"All\") {\n            return /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: determineColorStatus(movie.userStats.status)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: '#ffd1df',\n                    textAlign: 'center',\n                    fontWeight: 'bold'\n                  },\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: IMG_BASE_URL + movie.movie.movieItem.poster_path,\n                    width: 70\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '22px',\n                    letterSpacing: '1px'\n                  },\n                  children: movie.movie.movieItem.original_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontSize: '16px'\n                  },\n                  children: movie.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '22px',\n                    textAlign: 'center'\n                  },\n                  children: showRatingNumber(movie.userStats.rating)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"No movies in your list yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/sUpua6W.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyListTab, \"RuQeMZp4mYi+hbV6CDQ6zowIym8=\");\n\n_c = MyListTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyListTab\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/src/components/layout/tabs/MyListTab.js"],"names":["React","useEffect","useState","IMG_BASE_URL","LOCAL_STORAGE_KEY","watchStatus","COLORS_BORDER_LEFT_STATUS","Tabs","Tab","MyListTab","myMovies","setMyMovies","key","setKey","storedMovies","JSON","parse","localStorage","getItem","console","log","determineColorStatus","statusWatching","i","length","slice","showRatingNumber","rating","charAt","k","map","status","width","textAlign","movie","index","userStats","backgroundColor","color","fontWeight","movieItem","poster_path","fontSize","letterSpacing","original_title","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { IMG_BASE_URL, LOCAL_STORAGE_KEY, watchStatus, COLORS_BORDER_LEFT_STATUS } from '../../strings'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nexport default function MyListTab() {\r\n    const [myMovies, setMyMovies] = useState([])\r\n    const [key, setKey] = useState('All');\r\n\r\n    useEffect(() =>{\r\n        const storedMovies = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        console.log(storedMovies)\r\n        if (storedMovies) setMyMovies(storedMovies)\r\n    }, [])\r\n\r\n    const determineColorStatus = (statusWatching) => {\r\n        for (let i = 0; i < watchStatus.length; i++){\r\n            switch (statusWatching){\r\n                case watchStatus[i]:\r\n                    return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showRatingNumber = (rating) => {\r\n        // Check if the third character in the string is a 0, because if it is then the rating is 10\r\n        // else it will be the ')' bracket for which we have to return the second character in the string\r\n        if (rating.charAt(2) == \"0\"){\r\n            return rating.charAt(1) + rating.charAt(2)\r\n        } else {\r\n            return rating.charAt(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"heading-page\">My List</h1>\r\n            {myMovies.length ? // If length of movies array is not 0 then return table of movies\r\n            <>\r\n                <Tabs\r\n                defaultActiveKey=\"All\"\r\n                id=\"controlled-tab-example\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"All\" title=\"All Movies\" />\r\n                    {watchStatus.map(status => {\r\n                        return <Tab eventKey={status} title={status} />\r\n                    })}\r\n                </Tabs>\r\n                <table className=\"table-my-list\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '5px'}}></th>\r\n                        <th style={{width: '20px', textAlign: 'center'}}>#</th>\r\n                        <th style={{width: '70px', textAlign: 'center'}}>Image</th>\r\n                        <th>Title</th>\r\n                        <th style={{width: '120px'}}>Date added</th>\r\n                        <th style={{width: '100px',  textAlign: 'center'}}>Score</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {myMovies.map((movie, index) => {\r\n                        // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\r\n                        if (movie.userStats.status == key || key == \"All\"){\r\n                            return (\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td style={{backgroundColor: determineColorStatus(movie.userStats.status)}}></td>\r\n                                    <td style={{color: '#ffd1df', textAlign: 'center', fontWeight: 'bold'}}>{index + 1}</td>\r\n                                    <td><img src={IMG_BASE_URL + movie.movie.movieItem.poster_path} width={70} /></td>\r\n                                    <td style={{fontWeight: 'bold', fontSize: '22px', letterSpacing: '1px'}}>{movie.movie.movieItem.original_title}</td>\r\n                                    <td style={{fontSize: '16px'}}>{movie.date}</td>\r\n                                    <td style={{fontWeight: 'bold', fontSize: '22px', textAlign: 'center'}}>\r\n                                        {showRatingNumber(movie.userStats.rating)}\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            )\r\n                        }\r\n                    })}\r\n                </table>\r\n                </>\r\n            : <>\r\n            <p style={{color: 'white'}}>No movies in your list yet...</p><br/>\r\n            <img src=\"https://i.imgur.com/sUpua6W.gif\"/>\r\n            </>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}