{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\frontend\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Movie from './Movie';\nimport { Row } from 'react-grid-system';\nimport axios from 'axios';\nimport MovieService from '../services/MovieService';\nconst genresUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY_MOVIEDB}&language=en-US`;\n\nfunction MovieList(props) {\n  _s();\n\n  const [genres, setGenres] = useState([]); // Get genres\n\n  useEffect(() => {\n    MovieService.getGenres().then(res => {\n      console.log(res.data.genres);\n      setGenres(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      fluid: \"md\",\n      className: \"movies-content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: props.movies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie,\n            genres: genres\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MovieList, \"OACoFRc7CCgkBjNz6yRao2W4P/w=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/frontend/src/components/MovieList.js"],"names":["React","useState","useEffect","Movie","Row","axios","MovieService","genresUrl","process","env","REACT_APP_API_KEY_MOVIEDB","MovieList","props","genres","setGenres","getGenres","then","res","console","log","data","movies","map","movie","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,QAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,MAAMC,SAAS,GAAI,yDAAwDC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,iBAAjH;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC,CADsB,CAGtB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,CAACS,SAAb,GAAyBC,IAAzB,CAA8BC,GAAG,IAAI;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASP,MAArB;AACAC,MAAAA,SAAS,CAACG,GAAG,CAACG,IAAL,CAAT;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,2BACI;AAAS,MAAA,KAAK,EAAC,IAAf;AAAoB,MAAA,SAAS,EAAC,gBAA9B;AAAA,6BACI,QAAC,GAAD;AAAA,kBAEQR,KAAK,CAACS,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACtB,8BAAO,QAAC,KAAD;AAAsB,YAAA,KAAK,EAAEA,KAA7B;AAAoC,YAAA,MAAM,EAAEV;AAA5C,aAAYU,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH;;GAxBQb,S;;KAAAA,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Movie from './Movie';\r\nimport {Row} from 'react-grid-system';\r\nimport axios from 'axios'\r\nimport MovieService from '../services/MovieService';\r\n\r\nconst genresUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY_MOVIEDB}&language=en-US`\r\n\r\nfunction MovieList(props) {\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    // Get genres\r\n    useEffect(() => {\r\n        MovieService.getGenres().then(res => {\r\n            console.log(res.data.genres)\r\n            setGenres(res.data)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section fluid=\"md\" className=\"movies-content\">\r\n                <Row>\r\n                    {\r\n                        props.movies.map(movie => {\r\n                            return <Movie key={movie.id} movie={movie} genres={genres}/>\r\n                        })\r\n                    }\r\n                </Row>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n"]},"metadata":{},"sourceType":"module"}