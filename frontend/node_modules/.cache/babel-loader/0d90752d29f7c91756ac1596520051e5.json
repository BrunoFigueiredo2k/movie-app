{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\frontend\\\\src\\\\components\\\\layout\\\\tabs\\\\PopularTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MovieList from '../../MovieList';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { IMG_BASE_URL } from '../../strings';\nimport SearchBar from '../../SearchBar';\nimport ConfirmationMessage from '../ConfirmationMessage';\nimport { checkIfDisplayMesssageChanged } from '../../utils';\nexport default function PopularTab(props) {\n  _s();\n\n  const [searchVal, setSearchVal] = useState('');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [displayMessage, setDisplayMessage] = useState({\n    display: false,\n    type: '',\n    content: ''\n  });\n  console.log(searchedMovies);\n  console.log(searchVal);\n  console.log(props.movies); // Push amount of items passed in params to list.\n\n  const carouselItems = amountItems => {\n    const carouselItems = [];\n    let i;\n\n    for (i = 0; i < amountItems; i++) {\n      carouselItems.push( /*#__PURE__*/_jsxDEV(Carousel.Item, {\n        interval: 5000,\n        className: \"background-img-cover\",\n        style: {\n          height: '400px',\n          backgroundImage: `url(${IMG_BASE_URL + props.movies[i].backdrop_path})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            className: \"carousel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"carousel-title\",\n              children: props.movies[i].original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"carousel-description\",\n              children: props.movies[i].overview.slice(0, 120) + \" ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this));\n    }\n\n    return carouselItems;\n  }; // TODO: fix the search, for some reason searchVal is reset whenever setSearchedMovies is called\n\n\n  const resetSearchedMovies = () => {\n    if (searchedMovies.length > 0 && searchVal != '') {\n      setSearchedMovies([]);\n      setSearchVal(''); // reset input search field\n    }\n  };\n\n  const renderMovieList = () => {\n    if (searchedMovies.length > 0) {\n      return /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: searchedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    } else if (props.movies.length > 0) {\n      return /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: props.movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  checkIfDisplayMesssageChanged();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayMessage.display ? /*#__PURE__*/_jsxDEV(ConfirmationMessage, {\n      type: displayMessage.type,\n      message: displayMessage.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 39\n    }, this) : null, props.movies.length ? /*#__PURE__*/_jsxDEV(Carousel, {\n      style: {\n        maxHeight: '400px'\n      },\n      children: carouselItems(5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading-page\",\n        style: {\n          paddingTop: '30px'\n        },\n        children: [\"Popular movies\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetSearchedMovies(),\n          className: \"btn btn-primary ml-3\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        setSearchedMovies: setSearchedMovies,\n        setSearchVal: setSearchVal,\n        setDisplayMessage: setDisplayMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), renderMovieList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PopularTab, \"ggMWXqxWx40BqOynIl8VuT0qUTo=\");\n\n_c = PopularTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopularTab\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/frontend/src/components/layout/tabs/PopularTab.js"],"names":["React","useState","MovieList","Carousel","IMG_BASE_URL","SearchBar","ConfirmationMessage","checkIfDisplayMesssageChanged","PopularTab","props","searchVal","setSearchVal","searchedMovies","setSearchedMovies","displayMessage","setDisplayMessage","display","type","content","console","log","movies","carouselItems","amountItems","i","push","height","backgroundImage","backdrop_path","original_title","overview","slice","resetSearchedMovies","length","renderMovieList","maxHeight","paddingTop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport MovieList from '../../MovieList'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport {IMG_BASE_URL} from '../../strings'\r\nimport SearchBar from '../../SearchBar'\r\nimport ConfirmationMessage from '../ConfirmationMessage';\r\nimport {checkIfDisplayMesssageChanged} from '../../utils';\r\n\r\nexport default function PopularTab(props) {\r\n    const [searchVal, setSearchVal] = useState('');\r\n    const [searchedMovies, setSearchedMovies] = useState([]);\r\n    const [displayMessage, setDisplayMessage] = useState({\r\n        display: false,\r\n        type: '',\r\n        content: ''\r\n    });\r\n\r\n    console.log(searchedMovies);\r\n    console.log(searchVal);\r\n    console.log(props.movies);  \r\n\r\n    // Push amount of items passed in params to list.\r\n    const carouselItems = (amountItems) => {\r\n        const carouselItems = [];\r\n        let i;\r\n        for (i = 0; i < amountItems; i++) {\r\n            carouselItems.push(\r\n                <Carousel.Item interval={5000} className=\"background-img-cover\" style={{\r\n                    height: '400px',\r\n                    backgroundImage: `url(${IMG_BASE_URL + props.movies[i].backdrop_path})`\r\n                }}>\r\n                    <div className=\"wrapper\">\r\n                        <Carousel.Caption className=\"carousel\">\r\n                            <h1 className=\"carousel-title\">{props.movies[i].original_title}</h1>\r\n                            <p className=\"carousel-description\">{props.movies[i].overview.slice(0, 120) + \" ...\"}</p>\r\n                        </Carousel.Caption>\r\n                    </div>\r\n                </Carousel.Item>\r\n            );\r\n        }\r\n        return carouselItems\r\n    }\r\n\r\n    // TODO: fix the search, for some reason searchVal is reset whenever setSearchedMovies is called\r\n    const resetSearchedMovies = () => {\r\n        if (searchedMovies.length > 0 && searchVal != '') {\r\n            setSearchedMovies([]);\r\n            setSearchVal(''); // reset input search field\r\n        }\r\n    }\r\n\r\n    const renderMovieList = () => {\r\n        if (searchedMovies.length > 0) {\r\n            return (<MovieList movies={searchedMovies} />);\r\n        } else if (props.movies.length > 0) {\r\n            return (<MovieList movies={props.movies} />);\r\n        } else {\r\n            return (<p>No movies</p>);\r\n        }\r\n    }\r\n\r\n    checkIfDisplayMesssageChanged();\r\n\r\n    return (\r\n        <>\r\n            {displayMessage.display ? <ConfirmationMessage type={displayMessage.type} message={displayMessage.content} /> : null}\r\n\r\n            {props.movies.length ?\r\n                <Carousel style={{maxHeight: '400px'}}>\r\n                    {carouselItems(5)}\r\n                </Carousel> : null}\r\n            <div className=\"container\">\r\n                <h1 className=\"heading-page\" style={{paddingTop: '30px'}}>Popular movies \r\n                    <button onClick={resetSearchedMovies()} className=\"btn btn-primary ml-3\">Reset</button>\r\n                </h1>\r\n                <SearchBar setSearchedMovies={setSearchedMovies} setSearchVal={setSearchVal} setDisplayMessage={setDisplayMessage}/>\r\n                {renderMovieList()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}