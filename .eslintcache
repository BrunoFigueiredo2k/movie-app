[{"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\index.js":"1","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\App.js":"2","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieList.js":"3","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\Movie.js":"4","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Home.js":"5","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\About.js":"6","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieDetails.js":"7","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Login.js":"8","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\SignUp.js":"9","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\firebase.js":"10","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\Auth.js":"11","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Footer.js":"12","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Header.js":"13","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\SimpleTabs.js":"14","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\PopularTab.js":"15","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\MyListTab.js":"16","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\VerticallyCenteredModal.js":"17"},{"size":343,"mtime":1609290386413,"results":"18","hashOfConfig":"19"},{"size":862,"mtime":1609288549650,"results":"20","hashOfConfig":"19"},{"size":999,"mtime":1609285877080,"results":"21","hashOfConfig":"19"},{"size":1852,"mtime":1609282683262,"results":"22","hashOfConfig":"19"},{"size":394,"mtime":1609068860467,"results":"23","hashOfConfig":"19"},{"size":1512,"mtime":1609289546426,"results":"24","hashOfConfig":"19"},{"size":3781,"mtime":1609290129289,"results":"25","hashOfConfig":"19"},{"size":1867,"mtime":1609285897271,"results":"26","hashOfConfig":"19"},{"size":1642,"mtime":1609285893283,"results":"27","hashOfConfig":"19"},{"size":561,"mtime":1608988512834,"results":"28","hashOfConfig":"19"},{"size":641,"mtime":1609067950816,"results":"29","hashOfConfig":"19"},{"size":1107,"mtime":1609289104181,"results":"30","hashOfConfig":"19"},{"size":672,"mtime":1609285916031,"results":"31","hashOfConfig":"19"},{"size":2496,"mtime":1609285910836,"results":"32","hashOfConfig":"19"},{"size":379,"mtime":1609289407965,"results":"33","hashOfConfig":"19"},{"size":1614,"mtime":1609289916349,"results":"34","hashOfConfig":"19"},{"size":1168,"mtime":1609286290010,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9mb8xz",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\index.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\App.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieList.js",[],["73","74"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\Movie.js",["75"],"import React from 'react'\r\nimport { Col } from 'react-grid-system'\r\nimport MovieDetails from './MovieDetails'\r\nimport { useHistory, Route } from \"react-router-dom\";\r\nimport { IMG_BASE_URL } from './MovieDetails'\r\n\r\nfunction Movie({movie, genres}) {\r\n    const history = useHistory();\r\n    const genreNames = []\r\n    const genreIds = []\r\n\r\n    const learnMoreMovie = () => {\r\n        const clickedMovie = movie\r\n        history.push(`/details/${movie.original_title}`, {...clickedMovie});\r\n    }\r\n\r\n    // Push genre ids of this movie to array\r\n    movie.genre_ids.map(id => genreIds.push(id))\r\n\r\n    // Map through all possible genres for id and name\r\n    genres.map(genre => {\r\n        genreIds.map(id => {\r\n            if (id === genre.id){\r\n                genreNames.push(genre.name)\r\n            }\r\n            return true\r\n        })\r\n        return true\r\n    })\r\n\r\n    const genresLen = genreNames.length\r\n\r\n    return (\r\n        <>\r\n        <Col style={{margin: '20px 0'}}>\r\n            <Route\r\n                path={`details/${movie.original_title}`}\r\n                render={movie => (\r\n                    <MovieDetails {...movie} movie={movie} />\r\n                )}\r\n            />\r\n            <div className=\"card-movie\">\r\n                <img className=\"poster-img\" onClick={learnMoreMovie} src={IMG_BASE_URL + movie.poster_path}></img>\r\n                <p className=\"title\">{movie.original_title}</p>\r\n                <p className=\"genres\">{genreNames.map((name, i) => {\r\n                    // Last item in array with no comma\r\n                    if (genresLen === i + 1) {\r\n                        return name\r\n                    } else {\r\n                        return name + \", \"\r\n                    }\r\n                })}\r\n                </p>\r\n            </div>\r\n        </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Home.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\About.js",["76"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieDetails.js",["77","78"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Login.js",["79"],"import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app from \"../../firebase.js\";\r\nimport { AuthContext } from \"../../Auth\";\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport illustration from '../../images/illustration-cinema.svg';\r\nimport wave from '../../images/bg-wave.svg'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Login = ({ history }) => {\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  // If we have current user redirect to root path (home page)\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid=\"md\">\r\n      <Row className=\"login\">\r\n      <Col className=\"illustration\" style={{backgroundImage: `url(${wave})`}}>\r\n        <img src={illustration} height={600}></img>\r\n      </Col>\r\n        <Col className=\"container login-form middle\">\r\n        <h2>Log in</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <label for=\"email\">Email</label>\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" required/>\r\n\r\n          <label for=\"password\">Password</label>\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" required/>\r\n\r\n          <button type=\"submit\">Log in</button>\r\n        </form>\r\n        <p style={{textAlign: 'center'}}>No account yet? <Link to=\"/signup\" className=\"link\">Sign up</Link></p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\SignUp.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\firebase.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\Auth.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Footer.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Header.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\SimpleTabs.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\PopularTab.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\MyListTab.js",["80"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\VerticallyCenteredModal.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":43,"column":17,"nodeType":"87","endLine":43,"endColumn":109},{"ruleId":"85","severity":1,"message":"86","line":19,"column":25,"nodeType":"87","endLine":20,"endColumn":151},{"ruleId":"88","severity":1,"message":"89","line":32,"column":11,"nodeType":"90","messageId":"91","endLine":32,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":54,"column":25,"nodeType":"87","endLine":54,"endColumn":111},{"ruleId":"85","severity":1,"message":"86","line":38,"column":9,"nodeType":"87","endLine":38,"endColumn":46},{"ruleId":"85","severity":1,"message":"86","line":27,"column":29,"nodeType":"87","endLine":27,"endColumn":102},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'addMovieToList' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]