{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\frontend\\\\src\\\\components\\\\layout\\\\tabs\\\\TopMoviesTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { IMG_BASE_URL } from '../../strings';\nimport MyMovies from '../../../utils/MyMovies';\nimport ConfirmationMessage from '../ConfirmationMessage';\nexport default function TopMoviesTab(props) {\n  _s();\n\n  const [myMovies, setMyMovies] = useState([]);\n  const [displayMessage, setDisplayMessage] = useState(false);\n  const movies = props.movies; //TODO: create component alerting user that filter has been applied\n\n  useEffect(() => {\n    setMyMovies(MyMovies.getMoviesLocalStorage(movies));\n  }, [myMovies]);\n\n  const determineColorRank = index => {\n    const style = {\n      fontSize: '30px',\n      fontWeight: '700',\n      backgroundColor: 'transparent',\n      borderRadius: '10px',\n      padding: '20px 30px'\n    };\n\n    switch (index) {\n      case 1:\n        // gold\n        style.backgroundColor = '#CFB53B';\n        return style;\n\n      case 2:\n        // silver\n        style.backgroundColor = '#B4B4B4';\n        return style;\n\n      case 3:\n        // bronze\n        style.backgroundColor = '#8C7853';\n        return style;\n\n      default:\n        return style;\n    }\n  };\n\n  const onChangeDropdownValue = e => {\n    let val = e.target.value;\n\n    switch (val) {\n      case 'h-score':\n        applyFilter('t-score');\n        break;\n\n      case 'l-score':\n        applyFilter('b-score');\n        break;\n\n      case 'h-votes':\n        applyFilter('t-votes');\n        break;\n\n      case 'l-votes':\n        applyFilter('b-votes');\n        break;\n\n      case 'newest':\n        applyFilter('t-date');\n        break;\n\n      case 'oldest':\n        applyFilter('b-date');\n        break;\n    }\n  };\n\n  const applyFilter = type => {\n    movies.sort((a, b) => {\n      if (type.includes('score')) {\n        if (type.includes('t')) {\n          // filter by descending order\n          return b.vote_average - a.vote_average;\n        } else {\n          // filter by ascending order \n          return a.vote_average - b.vote_average;\n        }\n      } else if (type.includes('votes')) {\n        if (type.includes('t')) {\n          // filter by descending order\n          return b.vote_count - a.vote_count;\n        } else {\n          // filter by ascending order \n          return a.vote_count - b.vote_count;\n        }\n      } else if (type.includes('date')) {\n        // TODO: fix this\n        if (type.includes('t')) {\n          // filter by descending order\n          sortDateFormat(a, b);\n        } else {\n          // filter by ascending order \n          sortDateFormat(a, b);\n        }\n      }\n    });\n    setDisplayMessage(true);\n    console.log(displayMessage);\n  }; // TODO: fix this\n\n\n  const sortDateFormat = (a, b) => {\n    a = a.split('-').reverse().join('');\n    b = b.split('-').reverse().join('');\n    return a > b ? 1 : a < b ? -1 : 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [displayMessage ? /*#__PURE__*/_jsxDEV(ConfirmationMessage, {\n        type: 'success',\n        message: `Successfully filtered`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading-page\",\n        children: \"Top Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"filter\",\n        style: {\n          color: 'white'\n        },\n        children: \"Filter by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"filter\",\n        id: \"filter\",\n        className: \"select\",\n        onChange: onChangeDropdownValue,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"Select option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"h-score\",\n          children: \"Highest score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"l-score\",\n          children: \"Lowest score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"m-votes\",\n          children: \"Most votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"l-votes\",\n          children: \"Least votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"newest\",\n          children: \"Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"oldest\",\n          children: \"Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-my-list mt-4 pb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              style: {\n                width: '10%'\n              },\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              style: {\n                width: '60%'\n              },\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              style: {\n                width: '10%'\n              },\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              style: {\n                width: '10%'\n              },\n              children: \"Your Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              style: {\n                width: '10%'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: movies.map((movie, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: determineColorRank(index + 1),\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: IMG_BASE_URL + movie.poster_path,\n                  height: 90,\n                  style: {\n                    paddingLeft: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginLeft: '30px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      style: {\n                        fontSize: '20px'\n                      },\n                      children: movie.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 104\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: movie.release_date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 90\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [movie.vote_count, \" votes\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: movie.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: myMovies.map(myMovie => {\n                  if (myMovie.movie.movieItem.id === movie.id) {\n                    return myMovie.userStats.rating.charAt(1);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: myMovies.map(myMovie => {\n                  if (myMovie.movie.movieItem.id === movie.id) {\n                    return myMovie.userStats.status;\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 45\n              }, this)]\n            }, movie.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopMoviesTab, \"jMYBdPgadEPu6tjv2/XuHRo9Vqk=\");\n\n_c = TopMoviesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopMoviesTab\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/frontend/src/components/layout/tabs/TopMoviesTab.js"],"names":["React","useEffect","useState","IMG_BASE_URL","MyMovies","ConfirmationMessage","TopMoviesTab","props","myMovies","setMyMovies","displayMessage","setDisplayMessage","movies","getMoviesLocalStorage","determineColorRank","index","style","fontSize","fontWeight","backgroundColor","borderRadius","padding","onChangeDropdownValue","e","val","target","value","applyFilter","type","sort","a","b","includes","vote_average","vote_count","sortDateFormat","console","log","split","reverse","join","color","width","map","movie","poster_path","paddingLeft","marginLeft","title","release_date","myMovie","movieItem","id","userStats","rating","charAt","status"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {IMG_BASE_URL} from '../../strings'\r\nimport MyMovies from '../../../utils/MyMovies'\r\nimport ConfirmationMessage from '../ConfirmationMessage';\r\n\r\nexport default function TopMoviesTab(props) {\r\n    const [myMovies, setMyMovies] = useState([]);\r\n    const [displayMessage, setDisplayMessage] = useState(false);\r\n    const movies = props.movies;\r\n\r\n    //TODO: create component alerting user that filter has been applied\r\n    useEffect(() => {\r\n        setMyMovies(MyMovies.getMoviesLocalStorage(movies));\r\n    }, [myMovies])\r\n\r\n    const determineColorRank = (index) => {\r\n        const style = {\r\n            fontSize: '30px', \r\n            fontWeight: '700',\r\n            backgroundColor: 'transparent',\r\n            borderRadius: '10px',\r\n            padding: '20px 30px'\r\n        }\r\n\r\n        switch (index){\r\n            case 1: // gold\r\n                style.backgroundColor = '#CFB53B';\r\n                return style;\r\n            case 2: // silver\r\n                style.backgroundColor = '#B4B4B4';\r\n                return style;\r\n            case 3: // bronze\r\n                style.backgroundColor = '#8C7853';\r\n                return style;  \r\n            default:\r\n                return style;\r\n        }\r\n    }\r\n\r\n    const onChangeDropdownValue = (e) => {\r\n        let val = e.target.value\r\n        switch (val){\r\n            case 'h-score':\r\n                applyFilter('t-score');\r\n                break;\r\n            case 'l-score':\r\n                applyFilter('b-score');\r\n                break;\r\n            case 'h-votes':\r\n                applyFilter('t-votes')\r\n                break;\r\n            case 'l-votes':\r\n                applyFilter('b-votes');\r\n                break;\r\n            case 'newest':\r\n                applyFilter('t-date');\r\n                break;\r\n            case 'oldest':\r\n                applyFilter('b-date');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const applyFilter = (type) => {\r\n        movies.sort((a,b) => {\r\n            if (type.includes('score')){\r\n                if (type.includes('t')){\r\n                    // filter by descending order\r\n                    return b.vote_average - a.vote_average;\r\n                } else {\r\n                    // filter by ascending order \r\n                    return a.vote_average - b.vote_average;\r\n                }\r\n            } else if (type.includes('votes')){\r\n                if (type.includes('t')){\r\n                    // filter by descending order\r\n                    return b.vote_count - a.vote_count;\r\n                } else {\r\n                    // filter by ascending order \r\n                    return a.vote_count - b.vote_count;\r\n                }\r\n            } else if (type.includes('date')){\r\n                // TODO: fix this\r\n                if (type.includes('t')){\r\n                     // filter by descending order\r\n                    sortDateFormat(a, b);\r\n                } else {\r\n                    // filter by ascending order \r\n                    sortDateFormat(a, b);\r\n                }\r\n            }\r\n        })\r\n        setDisplayMessage(true);\r\n        console.log(displayMessage)\r\n    }\r\n\r\n    // TODO: fix this\r\n    const sortDateFormat = (a, b) => {\r\n        a = a.split('-').reverse().join('');    \r\n        b = b.split('-').reverse().join('');\r\n        return a > b ? 1 : a < b ? -1 : 0;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {displayMessage ? <ConfirmationMessage type={'success'} message={`Successfully filtered`} /> : null}\r\n                <h1 className=\"heading-page\">Top Movies</h1>\r\n\r\n                <label for=\"filter\" style={{color: 'white'}}>Filter by:</label><br/>\r\n                <select name=\"filter\" id=\"filter\" className=\"select\" onChange={onChangeDropdownValue}>\r\n                    <option disabled>Select option</option>\r\n                    <option value=\"h-score\">Highest score</option>\r\n                    <option value=\"l-score\">Lowest score</option>\r\n                    <option value=\"m-votes\">Most votes</option>\r\n                    <option value=\"l-votes\">Least votes</option>\r\n                    <option value=\"newest\">Newest</option>\r\n                    <option value=\"oldest\">Oldest</option>\r\n                </select>\r\n\r\n                <table className=\"table-my-list mt-4 pb-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\" style={{width: '10%'}}>Rank</th>\r\n                                <th></th>\r\n                                <th className=\"text-center\" style={{width: '60%'}}>Title</th>\r\n                                <th className=\"text-center\" style={{width: '10%'}}>Score</th>\r\n                                <th className=\"text-center\" style={{width: '10%'}}>Your Score</th>\r\n                                <th className=\"text-center\" style={{width: '10%'}}>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                movies.map((movie, index) => {\r\n                                    return (\r\n                                        <tr key={movie.id}>\r\n                                            <td className=\"text-center\"><span style={determineColorRank(index + 1)}>{index + 1}</span></td>\r\n                                            <td><img src={IMG_BASE_URL + movie.poster_path} height={90}\r\n                                                    style={{paddingLeft: '10px'}}/></td>\r\n                                            <td>\r\n                                                <div className=\"row\">\r\n                                                    <div style={{marginLeft: '30px'}}>\r\n                                                        <b style={{fontSize: '20px'}}>{movie.title}</b><br/>\r\n                                                        <span>{movie.release_date}</span><br/>\r\n                                                        <span>{movie.vote_count} votes</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className=\"text-center\">{movie.vote_average}</td>\r\n                                            <td className=\"text-center\">\r\n                                                {myMovies.map(myMovie => {\r\n                                                    if (myMovie.movie.movieItem.id === movie.id) {\r\n                                                        return (myMovie.userStats.rating.charAt(1))\r\n                                                    }\r\n                                                })}\r\n                                            </td>\r\n                                            <td className=\"text-center\">\r\n                                                {myMovies.map(myMovie => {\r\n                                                    if (myMovie.movie.movieItem.id === movie.id) {\r\n                                                        return (myMovie.userStats.status);\r\n                                                    }\r\n                                                })}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}