{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\frontend\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Col } from 'react-grid-system';\nimport MovieDetails from './MovieDetails';\nimport { useHistory, Route } from \"react-router-dom\";\nimport { IMG_BASE_URL } from './strings';\nimport { learnMoreMovie } from './utils';\n\nfunction Movie({\n  movie,\n  genres\n}) {\n  _s();\n\n  const history = useHistory();\n  const genreNames = [];\n  const genreIds = []; // Push genre ids of this movie to array\n\n  movie.genre_ids.map(id => genreIds.push(id)); // Map through all possible genres for id and name\n\n  genres.map(genre => {\n    genreIds.map(id => {\n      if (id === genre.id) {\n        genreNames.push(genre.name);\n      }\n\n      return true;\n    });\n    return true;\n  });\n  const genresLen = genreNames.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `details/${movie.original_title}`,\n        render: movie => /*#__PURE__*/_jsxDEV(MovieDetails, { ...movie,\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-movie\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"poster-img\",\n          onClick: learnMoreMovie,\n          src: IMG_BASE_URL + movie.poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"genres\",\n          children: genreNames.map((name, i) => {\n            // Last item in array with no comma\n            if (genresLen === i + 1) {\n              return name;\n            } else {\n              return name + \", \";\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Movie, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/frontend/src/components/Movie.js"],"names":["React","Col","MovieDetails","useHistory","Route","IMG_BASE_URL","learnMoreMovie","Movie","movie","genres","history","genreNames","genreIds","genre_ids","map","id","push","genre","name","genresLen","length","margin","original_title","poster_path","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,UAAR,EAAoBC,KAApB,QAAgC,kBAAhC;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,SAAQC,cAAR,QAA6B,SAA7B;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf,EAAgC;AAAA;;AAC5B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,UAAU,GAAG,EAAnB;AACA,QAAMC,QAAQ,GAAG,EAAjB,CAH4B,CAK5B;;AACAJ,EAAAA,KAAK,CAACK,SAAN,CAAgBC,GAAhB,CAAoBC,EAAE,IAAIH,QAAQ,CAACI,IAAT,CAAcD,EAAd,CAA1B,EAN4B,CAQ5B;;AACAN,EAAAA,MAAM,CAACK,GAAP,CAAWG,KAAK,IAAI;AAChBL,IAAAA,QAAQ,CAACE,GAAT,CAAaC,EAAE,IAAI;AACf,UAAIA,EAAE,KAAKE,KAAK,CAACF,EAAjB,EAAqB;AACjBJ,QAAAA,UAAU,CAACK,IAAX,CAAgBC,KAAK,CAACC,IAAtB;AACH;;AACD,aAAO,IAAP;AACH,KALD;AAMA,WAAO,IAAP;AACH,GARD;AAUA,QAAMC,SAAS,GAAGR,UAAU,CAACS,MAA7B;AAEA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,WAAUb,KAAK,CAACc,cAAe,EAD1C;AAEI,QAAA,MAAM,EAAEd,KAAK,iBACT,QAAC,YAAD,OAAkBA,KAAlB;AAAyB,UAAA,KAAK,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,OAAO,EAAEF,cAArC;AAAqD,UAAA,GAAG,EAAED,YAAY,GAAGG,KAAK,CAACe;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,oBAAsBf,KAAK,CAACc;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA,oBAAuBX,UAAU,CAACG,GAAX,CAAe,CAACI,IAAD,EAAOM,CAAP,KAAa;AAC/C;AACA,gBAAIL,SAAS,KAAKK,CAAC,GAAG,CAAtB,EAAyB;AACrB,qBAAON,IAAP;AACH,aAFD,MAEO;AACH,qBAAOA,IAAI,GAAG,IAAd;AACH;AACJ,WAPsB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyBH;;GA9CQX,K;UACWJ,U;;;KADXI,K;AAgDT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport {Col} from 'react-grid-system'\r\nimport MovieDetails from './MovieDetails'\r\nimport {useHistory, Route} from \"react-router-dom\"\r\nimport {IMG_BASE_URL} from './strings'\r\nimport {learnMoreMovie} from './utils'\r\n\r\nfunction Movie({movie, genres}) {\r\n    const history = useHistory();\r\n    const genreNames = []\r\n    const genreIds = []\r\n\r\n    // Push genre ids of this movie to array\r\n    movie.genre_ids.map(id => genreIds.push(id))\r\n\r\n    // Map through all possible genres for id and name\r\n    genres.map(genre => {\r\n        genreIds.map(id => {\r\n            if (id === genre.id) {\r\n                genreNames.push(genre.name)\r\n            }\r\n            return true\r\n        })\r\n        return true\r\n    })\r\n\r\n    const genresLen = genreNames.length\r\n\r\n    return (\r\n        <>\r\n            <Col style={{margin: '20px 0'}}>\r\n                <Route\r\n                    path={`details/${movie.original_title}`}\r\n                    render={movie => (\r\n                        <MovieDetails {...movie} movie={movie}/>\r\n                    )}\r\n                />\r\n                <div className=\"card-movie\">\r\n                    <img className=\"poster-img\" onClick={learnMoreMovie} src={IMG_BASE_URL + movie.poster_path}></img>\r\n                    <p className=\"title\">{movie.original_title}</p>\r\n                    <p className=\"genres\">{genreNames.map((name, i) => {\r\n                        // Last item in array with no comma\r\n                        if (genresLen === i + 1) {\r\n                            return name\r\n                        } else {\r\n                            return name + \", \"\r\n                        }\r\n                    })}\r\n                    </p>\r\n                </div>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie"]},"metadata":{},"sourceType":"module"}