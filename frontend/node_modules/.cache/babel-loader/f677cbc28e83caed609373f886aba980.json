{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\src\\\\components\\\\layout\\\\tabs\\\\MyListTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent } from '../../strings';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ModalAction from '../ModalAction';\nexport default function MyListTab(props) {\n  _s();\n\n  const [myMovies, setMyMovies] = useState([]);\n  const [key, setKey] = useState('All');\n  const [modalShow, setModalShow] = useState(false);\n  const [delMovie, setDelMovie] = useState(null);\n  let ids = [];\n  let movies = [];\n  useEffect(() => {\n    // Loop through all movies and add ids to list\n    props.movies.map(movie => {\n      ids.push(movie.id);\n    }); // Loop through all ids and getItems from localstorage based on id, if this doesn't return null then add movie to list\n\n    ids.map(id => {\n      let storedMovie = JSON.parse(localStorage.getItem(id.toString()));\n      if (storedMovie != null) movies.push(storedMovie[0]);\n    }); // Loop through all added movies and set movies to state\n\n    movies.map(movie => {\n      setMyMovies(movie);\n    });\n  }, []);\n\n  const determineColorStatus = statusWatching => {\n    for (let i = 0; i < watchStatus.length; i++) {\n      switch (statusWatching) {\n        case watchStatus[i]:\n          return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7);\n      }\n    }\n  };\n\n  const showRatingNumber = rating => {\n    // Check if the third character in the string is a 0, because if it is then the rating is 10\n    // else it will be the ')' bracket for which we have to return the second character in the string\n    if (rating.charAt(2) === \"0\") {\n      return rating.charAt(1) + rating.charAt(2);\n    } else {\n      return rating.charAt(1);\n    }\n  }; // TODO: figure out how to remove \n\n\n  const deleteMovie = id => {\n    myMovies.some(movie => {\n      if (id == movie.movie.movieItem.id) {\n        localStorage.removeItem(id);\n        return true;\n      }\n    });\n  };\n\n  let i;\n\n  for (i = 0; i < myMovies.length; i++) {\n    setMyMovies(myMovies[i]);\n  }\n\n  console.log(myMovies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading-page\",\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), myMovies.length ?\n    /*#__PURE__*/\n    // If length of movies array is not 0 then return table of movies\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"All\",\n        id: \"controlled-tab-example\",\n        activeKey: key,\n        onSelect: k => setKey(k),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"All\",\n          title: \"All Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), watchStatus.map(status => {\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: status,\n            title: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-my-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '20px',\n                textAlign: 'center'\n              },\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '70px',\n                textAlign: 'center'\n              },\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '120px'\n              },\n              children: \"Date added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '100px',\n                textAlign: 'center'\n              },\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), myMovies.map((movie, index) => {\n          console.log(movie);\n          console.log(key); // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\n\n          if (movie.userStats.status === key || key === \"All\") {\n            return /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: determineColorStatus(movie.userStats.status)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: '#ffd1df',\n                    textAlign: 'center',\n                    fontWeight: 'bold'\n                  },\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: IMG_BASE_URL + movie.movie.movieItem.poster_path,\n                    width: 70\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '22px',\n                    letterSpacing: '1px'\n                  },\n                  children: movie.movie.movieItem.original_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontSize: '16px'\n                  },\n                  children: movie.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '22px',\n                    textAlign: 'center'\n                  },\n                  children: showRatingNumber(movie.userStats.rating)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: '10px',\n                    padding: '0 20px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-trash delete-trash-icon\",\n                    \"aria-hidden\": \"true\",\n                    onClick: () => {\n                      setModalShow(true);\n                      setDelMovie(movie.movie.movieItem);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"No movies in your list yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/sUpua6W.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ModalAction, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      movie: delMovie,\n      function: deleteMovie,\n      content: {\n        title: deleteMovieContent.title,\n        description: deleteMovieContent.description,\n        btnTxt: deleteMovieContent.btnTxt\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyListTab, \"BY0ZxboxDo/IasdKm6Golz5eOE0=\");\n\n_c = MyListTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyListTab\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/src/components/layout/tabs/MyListTab.js"],"names":["React","useEffect","useState","IMG_BASE_URL","watchStatus","COLORS_BORDER_LEFT_STATUS","deleteMovieContent","Tabs","Tab","ModalAction","MyListTab","props","myMovies","setMyMovies","key","setKey","modalShow","setModalShow","delMovie","setDelMovie","ids","movies","map","movie","push","id","storedMovie","JSON","parse","localStorage","getItem","toString","determineColorStatus","statusWatching","i","length","slice","showRatingNumber","rating","charAt","deleteMovie","some","movieItem","removeItem","console","log","k","status","width","textAlign","index","userStats","backgroundColor","color","fontWeight","poster_path","fontSize","letterSpacing","original_title","date","padding","title","description","btnTxt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent } from '../../strings'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport ModalAction from '../ModalAction'\r\n\r\nexport default function MyListTab(props) {\r\n    const [myMovies, setMyMovies] = useState([])\r\n    const [key, setKey] = useState('All');\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [delMovie, setDelMovie] = useState(null)\r\n\r\n    let ids = [];\r\n    let movies = []\r\n\r\n    useEffect(() =>{\r\n        // Loop through all movies and add ids to list\r\n        props.movies.map(movie => {\r\n            ids.push(movie.id)\r\n        })\r\n\r\n        // Loop through all ids and getItems from localstorage based on id, if this doesn't return null then add movie to list\r\n        ids.map(id => {\r\n            let storedMovie = JSON.parse(localStorage.getItem(id.toString()))\r\n            if (storedMovie != null) movies.push(storedMovie[0])\r\n        })\r\n\r\n        // Loop through all added movies and set movies to state\r\n        movies.map(movie => {\r\n            setMyMovies(movie)\r\n        })\r\n    }, [])\r\n\r\n    const determineColorStatus = (statusWatching) => {\r\n        for (let i = 0; i < watchStatus.length; i++){\r\n            switch (statusWatching){\r\n                case watchStatus[i]:\r\n                    return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showRatingNumber = (rating) => {\r\n        // Check if the third character in the string is a 0, because if it is then the rating is 10\r\n        // else it will be the ')' bracket for which we have to return the second character in the string\r\n        if (rating.charAt(2) === \"0\"){\r\n            return rating.charAt(1) + rating.charAt(2)\r\n        } else {\r\n            return rating.charAt(1)\r\n        }\r\n    }\r\n\r\n    // TODO: figure out how to remove \r\n    const deleteMovie = (id) => {\r\n        myMovies.some(movie => {\r\n            if (id == movie.movie.movieItem.id) {\r\n                localStorage.removeItem(id)\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    let i;\r\n    for (i = 0; i < myMovies.length; i++){\r\n        setMyMovies(myMovies[i])\r\n    }\r\n    console.log(myMovies)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"heading-page\">My List</h1>\r\n            {myMovies.length ? // If length of movies array is not 0 then return table of movies\r\n            <>\r\n                <Tabs\r\n                defaultActiveKey=\"All\"\r\n                id=\"controlled-tab-example\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"All\" title=\"All Movies\" />\r\n                    {watchStatus.map(status => {\r\n                        return <Tab eventKey={status} title={status} />\r\n                    })}\r\n                </Tabs>\r\n                <table className=\"table-my-list\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '5px'}}></th>\r\n                        <th style={{width: '20px', textAlign: 'center'}}>#</th>\r\n                        <th style={{width: '70px', textAlign: 'center'}}>Image</th>\r\n                        <th>Title</th>\r\n                        <th style={{width: '120px'}}>Date added</th>\r\n                        <th style={{width: '100px',  textAlign: 'center'}}>Score</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    {myMovies.map((movie, index) => {\r\n                        console.log(movie)\r\n                        console.log(key)\r\n                        // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\r\n                        if (movie.userStats.status === key || key === \"All\"){\r\n                            return (\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td style={{backgroundColor: determineColorStatus(movie.userStats.status)}}></td>\r\n                                    <td style={{color: '#ffd1df', textAlign: 'center', fontWeight: 'bold'}}>{index + 1}</td>\r\n                                    <td><img src={IMG_BASE_URL + movie.movie.movieItem.poster_path} width={70} /></td>\r\n                                    <td style={{fontWeight: 'bold', fontSize: '22px', letterSpacing: '1px'}}>{movie.movie.movieItem.original_title}</td>\r\n                                    <td style={{fontSize: '16px'}}>{movie.date}</td>\r\n                                    <td style={{fontWeight: 'bold', fontSize: '22px', textAlign: 'center'}}>\r\n                                        {showRatingNumber(movie.userStats.rating)}\r\n                                    </td>\r\n                                    <td style={{width: '10px', padding: '0 20px'}}>\r\n                                        <i class=\"fa fa-trash delete-trash-icon\" aria-hidden=\"true\" onClick={() => {\r\n                                            setModalShow(true);\r\n                                            setDelMovie(movie.movie.movieItem);\r\n                                        }}></i>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            )\r\n                        }\r\n                    })}\r\n                </table>\r\n                </>\r\n            : <>\r\n            <p style={{color: 'white'}}>No movies in your list yet...</p><br/>\r\n            <img src=\"https://i.imgur.com/sUpua6W.gif\"/>\r\n            </>}\r\n\r\n            <ModalAction\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n            movie={delMovie}\r\n            function={deleteMovie}\r\n            content={{title: deleteMovieContent.title, description: deleteMovieContent.description, btnTxt: deleteMovieContent.btnTxt}} />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}