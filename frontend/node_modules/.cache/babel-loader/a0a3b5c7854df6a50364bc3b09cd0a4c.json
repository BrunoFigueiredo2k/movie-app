{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\src\\\\components\\\\layout\\\\ModalAction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport Button from 'react-bootstrap/Button';\n\nfunction ModalAction(props) {\n  _s();\n\n  const [movieId, setMovieId] = useState(null);\n  console.log(props);\n  useEffect(() => {\n    if (props.movie != null) {\n      setMovieId(props.movie.id);\n    } else {\n      console.log(\"movie object is null\");\n    }\n  }, []);\n\n  const deleteMovie = (id, movies) => {\n    movies.some(movie => {\n      if (id == movie.delMovie.id) {\n        localStorage.removeItem(id);\n        return true;\n      }\n    });\n    console.log('deleted');\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    variant: \"danger\",\n    ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        style: {\n          color: '#dc3545'\n        },\n        id: \"contained-modal-title-vcenter\",\n        children: props.content.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.content.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: deleteMovie(movieId, props.movies),\n        children: props.content.btnTxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalAction, \"QuIqRMZkKO/y6VtK1JPSCd36ebU=\");\n\n_c = ModalAction;\nexport default ModalAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAction\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/src/components/layout/ModalAction.js"],"names":["React","useState","useEffect","Modal","ModalBody","ModalHeader","ModalFooter","ModalTitle","Button","ModalAction","props","movieId","setMovieId","console","log","movie","id","deleteMovie","movies","some","delMovie","localStorage","removeItem","color","content","title","description","btnTxt","onHide"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,KAAK,CAACK,KAAN,IAAe,IAAnB,EAAwB;AACpBH,MAAAA,UAAU,CAACF,KAAK,CAACK,KAAN,CAAYC,EAAb,CAAV;AACH,KAFD,MAEO;AACHH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,WAAW,GAAG,CAACD,EAAD,EAAKE,MAAL,KAAgB;AAChCA,IAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAK,IAAI;AACjB,UAAIC,EAAE,IAAID,KAAK,CAACK,QAAN,CAAeJ,EAAzB,EAA6B;AACzBK,QAAAA,YAAY,CAACC,UAAb,CAAwBN,EAAxB;AACA,eAAO,IAAP;AACH;AACJ,KALD;AAMAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GARD;;AAUAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA,OACQA,KADR;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,uBAAgB,+BAHpB;AAII,IAAA,QAAQ,MAJZ;AAAA,4BAMI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,KAAK,EAAE;AAACa,UAAAA,KAAK,EAAE;AAAR,SAApB;AAAwC,QAAA,EAAE,EAAC,+BAA3C;AAAA,kBACKb,KAAK,CAACc,OAAN,CAAcC;AADnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI;AAAA,kBAAIf,KAAK,CAACc,OAAN,CAAcE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI,QAAC,KAAD,CAAO,MAAP;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAET,WAAW,CAACN,OAAD,EAAUD,KAAK,CAACQ,MAAhB,CAA7C;AAAA,kBAAuER,KAAK,CAACc,OAAN,CAAcG;AAArF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAEjB,KAAK,CAACkB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA9CQnB,W;;KAAAA,W;AAgDT,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction ModalAction(props) {\r\n    const [movieId, setMovieId] = useState(null)\r\n\r\n    console.log(props)\r\n\r\n    useEffect(() => {\r\n        if (props.movie != null){\r\n            setMovieId(props.movie.id)\r\n        } else {\r\n            console.log(\"movie object is null\")\r\n        }\r\n    }, [])\r\n\r\n    const deleteMovie = (id, movies) => {\r\n        movies.some(movie => {\r\n            if (id == movie.delMovie.id) {\r\n                localStorage.removeItem(id)\r\n                return true\r\n            }\r\n        })\r\n        console.log('deleted')\r\n    }\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <Modal variant=\"danger\"\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title style={{color: '#dc3545'}} id=\"contained-modal-title-vcenter\">\r\n                    {props.content.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{props.content.description}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={deleteMovie(movieId, props.movies)}>{props.content.btnTxt}</Button>\r\n                <Button variant=\"light\" onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalAction"]},"metadata":{},"sourceType":"module"}