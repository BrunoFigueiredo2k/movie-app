[{"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\index.js":"1","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\App.js":"2","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\layout\\header.js":"3","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieList.js":"4","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\Movie.js":"5","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Home.js":"6","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\About.js":"7","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Dashboard.js":"8","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\layout\\Header.js":"9","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieDetails.js":"10","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\layout\\Footer.js":"11"},{"size":295,"mtime":1608852967014,"results":"12","hashOfConfig":"13"},{"size":183,"mtime":1608936187612,"results":"14","hashOfConfig":"13"},{"size":1125,"mtime":1608816842511,"results":"15","hashOfConfig":"13"},{"size":1093,"mtime":1608936393247,"results":"16","hashOfConfig":"13"},{"size":1831,"mtime":1608933970649,"results":"17","hashOfConfig":"13"},{"size":788,"mtime":1608936367706,"results":"18","hashOfConfig":"13"},{"size":178,"mtime":1608824756902,"results":"19","hashOfConfig":"13"},{"size":190,"mtime":1608824744315,"results":"20","hashOfConfig":"13"},{"size":1444,"mtime":1608934244961,"results":"21","hashOfConfig":"13"},{"size":2273,"mtime":1608930942722,"results":"22","hashOfConfig":"13"},{"size":1132,"mtime":1608936224035,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9mb8xz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\index.js",[],["49","50"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\App.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\layout\\header.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieList.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\Movie.js",["51","52","53","54"],"import React, { useState } from 'react'\r\nimport { Col } from 'react-grid-system'\r\nimport MovieDetails from './MovieDetails'\r\nimport { useHistory, Route } from \"react-router-dom\";\r\n\r\nconst IMG_BASE_URL = \"https://image.tmdb.org/t/p/w500\"\r\n\r\nfunction Movie({movie, genres}) {\r\n    const history = useHistory();\r\n    const genreNames = []\r\n    const genreIds = []\r\n\r\n    const learnMoreMovie = () => {\r\n        const clickedMovie = movie\r\n        history.push(`/details/${movie.original_title}`, {...clickedMovie});\r\n    }\r\n\r\n    // Push genre ids of this movie to array\r\n    movie.genre_ids.map(id => genreIds.push(id))\r\n\r\n    // Map through all possible genres for id and name\r\n    genres.map(genre => {\r\n        genreIds.map(id => {\r\n            if (id === genre.id){\r\n                genreNames.push(genre.name)\r\n            }\r\n        })\r\n    })\r\n\r\n    const genresLen = genreNames.length\r\n\r\n    return (\r\n        <>\r\n        <Col style={{margin: '20px 0'}}>\r\n            <Route\r\n                path={`details/${movie.original_title}`}\r\n                render={movie => (\r\n                    <MovieDetails {...movie} movie={movie} />\r\n                )}\r\n            />\r\n            <div className=\"card-movie\">\r\n                <img className=\"poster-img\" onClick={learnMoreMovie} src={IMG_BASE_URL + movie.poster_path}></img>\r\n                <p className=\"title\">{movie.original_title}</p>\r\n                <p className=\"genres\">{genreNames.map((name, i) => {\r\n                    // Last item in array with no comma\r\n                    if (genresLen === i + 1) {\r\n                        return name\r\n                    } else {\r\n                        return name + \", \"\r\n                    }\r\n                })}\r\n                </p>\r\n            </div>\r\n        </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Home.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\About.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\layout\\Header.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieDetails.js",["55"],"import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport '../css/App.css'\r\nimport { Row, Col } from 'react-grid-system'\r\n\r\nconst IMG_BASE_URL = \"https://image.tmdb.org/t/p/w500/\"\r\n\r\nconst MovieDetails = () => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <div className=\"movie-details\">\r\n            <div className=\"movie-backdrop-img\" id=\"movie-backdrop-img\" \r\n            style={{backgroundImage: `url(${IMG_BASE_URL + location.state.backdrop_path})`}}>\r\n                <div className=\"wrapper\">\r\n                    <h1 className=\"movie-details-title\">{location.state.original_title}</h1>\r\n                    <span style={{fontSize: '30px', color: '#ccc', fontWeight: '600'}}> ({location.state.release_date.slice(0, 4)})</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <img src={IMG_BASE_URL + location.state.poster_path} className=\"movie-details-poster\"></img>\r\n                    </Col>\r\n                    <Col>\r\n                        <ul className=\"movie-details-top-stats horizontal-ul\">\r\n                            <li><p className=\"average-rating\">{location.state.vote_average}</p></li>\r\n                            <li><span style={{marginLeft: '-50px', fontSize: '18px', color: '#ccc'}}>/ {location.state.vote_count} votes</span></li>\r\n                            <li><p className=\"tag\">Popularity: <b>{Math.round(location.state.popularity)}</b></p></li>\r\n                        </ul>\r\n                        <p className=\"subtitle\">Language:</p>\r\n                        <p className=\"description\" style={{fontSize: '14px', textTransform: 'uppercase'}}>{location.state.original_language}</p>\r\n\r\n                        <p className=\"subtitle\">Release date:</p>\r\n                        <p className=\"description\" style={{fontSize: '14px'}}>{location.state.release_date}</p>\r\n\r\n                        <p className=\"subtitle\">Description:</p>\r\n                        <p className=\"description\" style={{fontSize: '14px'}}>{location.state.overview}</p>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\layout\\Footer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":22,"column":22,"nodeType":"66","messageId":"67","endLine":22,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":23,"column":25,"nodeType":"66","messageId":"67","endLine":23,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":42,"column":17,"nodeType":"70","endLine":42,"endColumn":109},{"ruleId":"68","severity":1,"message":"69","line":24,"column":25,"nodeType":"70","endLine":24,"endColumn":111},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]