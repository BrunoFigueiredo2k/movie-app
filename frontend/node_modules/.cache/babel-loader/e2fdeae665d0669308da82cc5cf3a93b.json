{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\src\\\\components\\\\layout\\\\ModalAction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport Button from 'react-bootstrap/Button';\n\nfunction ModalAction(props) {\n  _s();\n\n  const [movieId, setMovieId] = useState(null);\n  useEffect(() => {\n    if (props.movie != null) {\n      setMovieId(props.movie.movieItem.id);\n    } else {\n      console.log(\"movie object is null\");\n    }\n  }, []);\n  console.log(props);\n\n  const deleteMovie = () => {\n    props.movies.some(movie => {\n      console.log(movie.movie.movieItem.id);\n\n      if (movieId == movie.movie.movieItem.id) {\n        localStorage.removeItem(id);\n        console.log('deleted');\n        return true;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    variant: \"danger\",\n    ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      style: {\n        backgroundColor: '#dc354566'\n      },\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        style: {\n          color: '#dc3545'\n        },\n        id: \"contained-modal-title-vcenter\",\n        children: props.content.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.content.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [movieId ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: deleteMovie(),\n        children: props.content.btnTxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this) : console.log(movieId), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalAction, \"QuIqRMZkKO/y6VtK1JPSCd36ebU=\");\n\n_c = ModalAction;\nexport default ModalAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAction\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/src/components/layout/ModalAction.js"],"names":["React","useState","useEffect","Modal","ModalBody","ModalHeader","ModalFooter","ModalTitle","Button","ModalAction","props","movieId","setMovieId","movie","movieItem","id","console","log","deleteMovie","movies","some","localStorage","removeItem","backgroundColor","color","content","title","description","btnTxt","onHide"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,KAAK,CAACG,KAAN,IAAe,IAAnB,EAAwB;AACpBD,MAAAA,UAAU,CAACF,KAAK,CAACG,KAAN,CAAYC,SAAZ,CAAsBC,EAAvB,CAAV;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAQAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACtBR,IAAAA,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkBP,KAAK,IAAI;AACvBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACA,KAAN,CAAYC,SAAZ,CAAsBC,EAAlC;;AACA,UAAIJ,OAAO,IAAIE,KAAK,CAACA,KAAN,CAAYC,SAAZ,CAAsBC,EAArC,EAAyC;AACrCM,QAAAA,YAAY,CAACC,UAAb,CAAwBP,EAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,eAAO,IAAP;AACH;AACJ,KAPD;AAQH,GATD;;AAWA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA,OACQP,KADR;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,uBAAgB,+BAHpB;AAII,IAAA,QAAQ,MAJZ;AAAA,4BAMI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAA0B,MAAA,KAAK,EAAE;AAACa,QAAAA,eAAe,EAAE;AAAlB,OAAjC;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAApB;AAAwC,QAAA,EAAE,EAAC,+BAA3C;AAAA,kBACKd,KAAK,CAACe,OAAN,CAAcC;AADnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI;AAAA,kBAAIhB,KAAK,CAACe,OAAN,CAAcE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI,QAAC,KAAD,CAAO,MAAP;AAAA,iBACKhB,OAAO,gBACR,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAEO,WAAW,EAA7C;AAAA,kBAAkDR,KAAK,CAACe,OAAN,CAAcG;AAAhE;AAAA;AAAA;AAAA;AAAA,cADQ,GAENZ,OAAO,CAACC,GAAR,CAAYN,OAAZ,CAHN,eAII,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAED,KAAK,CAACmB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA/CQpB,W;;KAAAA,W;AAiDT,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction ModalAction(props) {\r\n    const [movieId, setMovieId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (props.movie != null){\r\n            setMovieId(props.movie.movieItem.id)\r\n        } else {\r\n            console.log(\"movie object is null\")\r\n        }\r\n    }, [])\r\n\r\n    console.log(props)\r\n\r\n    const deleteMovie = () => {\r\n        props.movies.some(movie => {\r\n            console.log(movie.movie.movieItem.id)\r\n            if (movieId == movie.movie.movieItem.id) {\r\n                localStorage.removeItem(id)\r\n                console.log('deleted')\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal variant=\"danger\"\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton style={{backgroundColor: '#dc354566'}}>\r\n                <Modal.Title style={{color: '#dc3545'}} id=\"contained-modal-title-vcenter\">\r\n                    {props.content.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{props.content.description}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {movieId? \r\n                <Button variant=\"danger\" onClick={deleteMovie()}>{props.content.btnTxt}</Button>\r\n                : console.log(movieId)  }\r\n                <Button variant=\"light\" onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalAction"]},"metadata":{},"sourceType":"module"}