{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Movie from './Movie';\nimport { Container, Row } from 'react-grid-system';\nimport '../css/App.css';\nimport axios from 'axios';\nimport Footer from './layout/Footer';\nconst genresUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY_MOVIEDB}&language=en-US`;\n\nfunction MovieList(props) {\n  _s();\n\n  const [genres, setGenres] = useState([]); // Get genres\n\n  useEffect(() => {\n    axios.get(genresUrl).then(res => {\n      setGenres(res.data.genres);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      className: \"movies-content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: props.movies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie,\n            genres: genres\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MovieList, \"OACoFRc7CCgkBjNz6yRao2W4P/w=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/src/components/MovieList.js"],"names":["React","useState","useEffect","Movie","Container","Row","axios","Footer","genresUrl","process","env","REACT_APP_API_KEY_MOVIEDB","MovieList","props","genres","setGenres","get","then","res","data","catch","err","console","log","movies","map","movie","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,mBAA/B;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,SAAS,GAAI,yDAAwDC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,iBAAjH;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC,CADsB,CAGtB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACU,GAAN,CAAUR,SAAV,EACCS,IADD,CACMC,GAAG,IAAI;AACTH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAJ,CAASL,MAAV,CAAT;AACH,KAHD,EAICM,KAJD,CAIOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAA,6BACI,QAAC,GAAD;AAAA,kBAEQR,KAAK,CAACW,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAG;AACrB,8BAAO,QAAC,KAAD;AAAsB,YAAA,KAAK,EAAEA,KAA7B;AAAoC,YAAA,MAAM,EAAEZ;AAA5C,aAAYY,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAaH;;GA3BQf,S;;KAAAA,S;AA6BT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Movie from './Movie';\r\nimport { Container, Row } from 'react-grid-system';\r\nimport '../css/App.css'\r\nimport axios from 'axios'\r\nimport Footer from './layout/Footer';\r\n\r\nconst genresUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY_MOVIEDB}&language=en-US`\r\n\r\nfunction MovieList(props) {\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    // Get genres\r\n    useEffect(() => {\r\n        axios.get(genresUrl)\r\n        .then(res => {\r\n            setGenres(res.data.genres)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Container fluid=\"md\" className=\"movies-content\">\r\n            <Row>\r\n                {\r\n                    props.movies.map(movie =>{\r\n                        return <Movie key={movie.id} movie={movie} genres={genres}/>\r\n                    })\r\n                }\r\n            </Row>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n"]},"metadata":{},"sourceType":"module"}