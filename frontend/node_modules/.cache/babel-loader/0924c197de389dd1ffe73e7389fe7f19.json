{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\src\\\\components\\\\layout\\\\tabs\\\\MyListTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent } from '../../strings';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ModalAction from '../ModalAction';\nexport default function MyListTab(props) {\n  _s();\n\n  const [myMovies, setMyMovies] = useState([]);\n  const [key, setKey] = useState('All');\n  const [modalShow, setModalShow] = useState(false);\n  const [delMovie, setDelMovie] = useState(null);\n  console.log(props.movies);\n  useEffect(() => {\n    let storedMovies = [];\n    let ids = [];\n    props.movies.map(movie => {\n      console.log(movie.id);\n      ids.push(movie.id);\n    });\n    console.log(ids);\n    ids.map(id => {\n      let movieObj = JSON.parse(localStorage.getItem(id));\n      console.log(movieObj);\n\n      if (movieObj != null) {\n        storedMovies.push(movieObj);\n      }\n    });\n    console.log(storedMovies);\n    if (storedMovies) setMyMovies(storedMovies);\n  }, []);\n  console.log(myMovies);\n\n  const determineColorStatus = statusWatching => {\n    for (let i = 0; i < watchStatus.length; i++) {\n      switch (statusWatching) {\n        case watchStatus[i]:\n          return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7);\n      }\n    }\n  };\n\n  const showRatingNumber = rating => {\n    // Check if the third character in the string is a 0, because if it is then the rating is 10\n    // else it will be the ')' bracket for which we have to return the second character in the string\n    if (rating.charAt(2) === \"0\") {\n      return rating.charAt(1) + rating.charAt(2);\n    } else {\n      return rating.charAt(1);\n    }\n  }; // TODO: figure out how to remove \n\n\n  const deleteMovie = id => {\n    myMovies.some(movie => {\n      if (id == movie.movie.movieItem.id) {\n        localStorage.removeItem(id);\n        return true;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading-page\",\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), myMovies.length ?\n    /*#__PURE__*/\n    // If length of movies array is not 0 then return table of movies\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"All\",\n        id: \"controlled-tab-example\",\n        activeKey: key,\n        onSelect: k => setKey(k),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"All\",\n          title: \"All Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), watchStatus.map(status => {\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: status,\n            title: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-my-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '20px',\n                textAlign: 'center'\n              },\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '70px',\n                textAlign: 'center'\n              },\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '120px'\n              },\n              children: \"Date added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '100px',\n                textAlign: 'center'\n              },\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), myMovies.map((movie, index) => {\n          movie.map(movie => {\n            console.log(movie); // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\n\n            if (movie.userStats.status === key || key === \"All\") {\n              return /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      backgroundColor: determineColorStatus(movie.userStats.status)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: '#ffd1df',\n                      textAlign: 'center',\n                      fontWeight: 'bold'\n                    },\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: IMG_BASE_URL + movie.movie.movieItem.poster_path,\n                      width: 70\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      fontWeight: 'bold',\n                      fontSize: '22px',\n                      letterSpacing: '1px'\n                    },\n                    children: movie.movie.movieItem.original_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      fontSize: '16px'\n                    },\n                    children: movie.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      fontWeight: 'bold',\n                      fontSize: '22px',\n                      textAlign: 'center'\n                    },\n                    children: showRatingNumber(movie.userStats.rating)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '10px',\n                      padding: '0 20px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-trash delete-trash-icon\",\n                      \"aria-hidden\": \"true\",\n                      onClick: () => {\n                        setModalShow(true);\n                        setDelMovie(movie.movie.movieItem);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this);\n            }\n          });\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"No movies in your list yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/sUpua6W.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ModalAction, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      movie: delMovie,\n      function: deleteMovie,\n      content: {\n        title: deleteMovieContent.title,\n        description: deleteMovieContent.description,\n        btnTxt: deleteMovieContent.btnTxt\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyListTab, \"BY0ZxboxDo/IasdKm6Golz5eOE0=\");\n\n_c = MyListTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyListTab\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/src/components/layout/tabs/MyListTab.js"],"names":["React","useEffect","useState","IMG_BASE_URL","watchStatus","COLORS_BORDER_LEFT_STATUS","deleteMovieContent","Tabs","Tab","ModalAction","MyListTab","props","myMovies","setMyMovies","key","setKey","modalShow","setModalShow","delMovie","setDelMovie","console","log","movies","storedMovies","ids","map","movie","id","push","movieObj","JSON","parse","localStorage","getItem","determineColorStatus","statusWatching","i","length","slice","showRatingNumber","rating","charAt","deleteMovie","some","movieItem","removeItem","k","status","width","textAlign","index","userStats","backgroundColor","color","fontWeight","poster_path","fontSize","letterSpacing","original_title","date","padding","title","description","btnTxt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,yBAApC,EAA+DC,kBAA/D,QAAyF,eAAzF;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,MAAlB;AAEArB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIsB,YAAY,GAAG,EAAnB;AACA,QAAIC,GAAG,GAAG,EAAV;AACAb,IAAAA,KAAK,CAACW,MAAN,CAAaG,GAAb,CAAiBC,KAAK,IAAI;AACtBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,EAAlB;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASF,KAAK,CAACC,EAAf;AACH,KAHD;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAA,IAAAA,GAAG,CAACC,GAAJ,CAAQE,EAAE,IAAI;AACV,UAAIE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,EAArB,CAAX,CAAf;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,UAAIA,QAAQ,IAAI,IAAhB,EAAqB;AACjBN,QAAAA,YAAY,CAACK,IAAb,CAAkBC,QAAlB;AACH;AACJ,KAND;AAOAT,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACA,QAAIA,YAAJ,EAAkBV,WAAW,CAACU,YAAD,CAAX;AACrB,GAjBQ,EAiBN,EAjBM,CAAT;AAmBAH,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;;AAEA,QAAMsB,oBAAoB,GAAIC,cAAD,IAAoB;AAC7C,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,WAAW,CAACiC,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AACxC,cAAQD,cAAR;AACI,aAAK/B,WAAW,CAACgC,CAAD,CAAhB;AACI,iBAAO/B,yBAAyB,CAAC+B,CAAD,CAAzB,CAA6BE,KAA7B,CAAmCjC,yBAAyB,CAAC+B,CAAD,CAAzB,CAA6BC,MAA7B,GAAsC,CAAzE,CAAP;AAFR;AAIH;AACJ,GAPD;;AASA,QAAME,gBAAgB,GAAIC,MAAD,IAAY;AACjC;AACA;AACA,QAAIA,MAAM,CAACC,MAAP,CAAc,CAAd,MAAqB,GAAzB,EAA6B;AACzB,aAAOD,MAAM,CAACC,MAAP,CAAc,CAAd,IAAmBD,MAAM,CAACC,MAAP,CAAc,CAAd,CAA1B;AACH,KAFD,MAEO;AACH,aAAOD,MAAM,CAACC,MAAP,CAAc,CAAd,CAAP;AACH;AACJ,GARD,CAtCqC,CAgDrC;;;AACA,QAAMC,WAAW,GAAIf,EAAD,IAAQ;AACxBf,IAAAA,QAAQ,CAAC+B,IAAT,CAAcjB,KAAK,IAAI;AACnB,UAAIC,EAAE,IAAID,KAAK,CAACA,KAAN,CAAYkB,SAAZ,CAAsBjB,EAAhC,EAAoC;AAChCK,QAAAA,YAAY,CAACa,UAAb,CAAwBlB,EAAxB;AACA,eAAO,IAAP;AACH;AACJ,KALD;AAMH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKf,QAAQ,CAACyB,MAAT;AAAA;AAAkB;AACnB;AAAA,8BACI,QAAC,IAAD;AACA,QAAA,gBAAgB,EAAC,KADjB;AAEA,QAAA,EAAE,EAAC,wBAFH;AAGA,QAAA,SAAS,EAAEvB,GAHX;AAIA,QAAA,QAAQ,EAAGgC,CAAD,IAAO/B,MAAM,CAAC+B,CAAD,CAJvB;AAAA,gCAKI,QAAC,GAAD;AAAK,UAAA,QAAQ,EAAC,KAAd;AAAoB,UAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBALJ,EAMK1C,WAAW,CAACqB,GAAZ,CAAgBsB,MAAM,IAAI;AACvB,8BAAO,QAAC,GAAD;AAAK,YAAA,QAAQ,EAAEA,MAAf;AAAuB,YAAA,KAAK,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA,gCACI;AAAA,iCACA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR;AAAX;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,KAAK,EAAE;AAACA,gBAAAA,KAAK,EAAE,MAAR;AAAgBC,gBAAAA,SAAS,EAAE;AAA3B,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,KAAK,EAAE;AAACD,gBAAAA,KAAK,EAAE,MAAR;AAAgBC,gBAAAA,SAAS,EAAE;AAA3B,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,KAAK,EAAE;AAACD,gBAAAA,KAAK,EAAE;AAAR,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAI,cAAA,KAAK,EAAE;AAACA,gBAAAA,KAAK,EAAE,OAAR;AAAkBC,gBAAAA,SAAS,EAAE;AAA7B,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAaKrC,QAAQ,CAACa,GAAT,CAAa,CAACC,KAAD,EAAQwB,KAAR,KAAkB;AAC5BxB,UAAAA,KAAK,CAACD,GAAN,CAAUC,KAAK,IAAI;AACfN,YAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ,EADe,CAEf;;AACA,gBAAIA,KAAK,CAACyB,SAAN,CAAgBJ,MAAhB,KAA2BjC,GAA3B,IAAkCA,GAAG,KAAK,KAA9C,EAAoD;AAChD,kCACI;AAAA,uCACA;AAAA,0CACI;AAAI,oBAAA,KAAK,EAAE;AAACsC,sBAAAA,eAAe,EAAElB,oBAAoB,CAACR,KAAK,CAACyB,SAAN,CAAgBJ,MAAjB;AAAtC;AAAX;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,KAAK,EAAE;AAACM,sBAAAA,KAAK,EAAE,SAAR;AAAmBJ,sBAAAA,SAAS,EAAE,QAA9B;AAAwCK,sBAAAA,UAAU,EAAE;AAApD,qBAAX;AAAA,8BAAyEJ,KAAK,GAAG;AAAjF;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA,2CAAI;AAAK,sBAAA,GAAG,EAAE/C,YAAY,GAAGuB,KAAK,CAACA,KAAN,CAAYkB,SAAZ,CAAsBW,WAA/C;AAA4D,sBAAA,KAAK,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAI,oBAAA,KAAK,EAAE;AAACD,sBAAAA,UAAU,EAAE,MAAb;AAAqBE,sBAAAA,QAAQ,EAAE,MAA/B;AAAuCC,sBAAAA,aAAa,EAAE;AAAtD,qBAAX;AAAA,8BAA0E/B,KAAK,CAACA,KAAN,CAAYkB,SAAZ,CAAsBc;AAAhG;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI;AAAI,oBAAA,KAAK,EAAE;AAACF,sBAAAA,QAAQ,EAAE;AAAX,qBAAX;AAAA,8BAAgC9B,KAAK,CAACiC;AAAtC;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAI,oBAAA,KAAK,EAAE;AAACL,sBAAAA,UAAU,EAAE,MAAb;AAAqBE,sBAAAA,QAAQ,EAAE,MAA/B;AAAuCP,sBAAAA,SAAS,EAAE;AAAlD,qBAAX;AAAA,8BACKV,gBAAgB,CAACb,KAAK,CAACyB,SAAN,CAAgBX,MAAjB;AADrB;AAAA;AAAA;AAAA;AAAA,0BANJ,eASI;AAAI,oBAAA,KAAK,EAAE;AAACQ,sBAAAA,KAAK,EAAE,MAAR;AAAgBY,sBAAAA,OAAO,EAAE;AAAzB,qBAAX;AAAA,2CACI;AAAG,sBAAA,KAAK,EAAC,+BAAT;AAAyC,qCAAY,MAArD;AAA4D,sBAAA,OAAO,EAAE,MAAM;AACvE3C,wBAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,wBAAAA,WAAW,CAACO,KAAK,CAACA,KAAN,CAAYkB,SAAb,CAAX;AACH;AAHD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAoBH;AACJ,WAzBD;AA0BH,SA3BA,CAbL;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA,oBADC,gBAuDC;AAAA,8BACF;AAAG,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAE;AAAR,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,eAC2D;AAAA;AAAA;AAAA;AAAA,cAD3D,eAEF;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA,oBAzDN,eA8DI,QAAC,WAAD;AACA,MAAA,IAAI,EAAErC,SADN;AAEA,MAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF1B;AAGA,MAAA,KAAK,EAAEC,QAHP;AAIA,MAAA,QAAQ,EAAEwB,WAJV;AAKA,MAAA,OAAO,EAAE;AAACmB,QAAAA,KAAK,EAAEvD,kBAAkB,CAACuD,KAA3B;AAAkCC,QAAAA,WAAW,EAAExD,kBAAkB,CAACwD,WAAlE;AAA+EC,QAAAA,MAAM,EAAEzD,kBAAkB,CAACyD;AAA1G;AALT;AAAA;AAAA;AAAA;AAAA,YA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuEH;;GAjIuBrD,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent } from '../../strings'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport ModalAction from '../ModalAction'\r\n\r\nexport default function MyListTab(props) {\r\n    const [myMovies, setMyMovies] = useState([])\r\n    const [key, setKey] = useState('All');\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [delMovie, setDelMovie] = useState(null)\r\n\r\n    console.log(props.movies)\r\n\r\n    useEffect(() =>{\r\n        let storedMovies = [];\r\n        let ids = [];\r\n        props.movies.map(movie => {\r\n            console.log(movie.id)\r\n            ids.push(movie.id)\r\n        })\r\n        console.log(ids)\r\n        ids.map(id => {\r\n            let movieObj = JSON.parse(localStorage.getItem(id))\r\n            console.log(movieObj);\r\n            if (movieObj != null){\r\n                storedMovies.push(movieObj)\r\n            }\r\n        })\r\n        console.log(storedMovies)\r\n        if (storedMovies) setMyMovies(storedMovies)\r\n    }, [])\r\n\r\n    console.log(myMovies)\r\n\r\n    const determineColorStatus = (statusWatching) => {\r\n        for (let i = 0; i < watchStatus.length; i++){\r\n            switch (statusWatching){\r\n                case watchStatus[i]:\r\n                    return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showRatingNumber = (rating) => {\r\n        // Check if the third character in the string is a 0, because if it is then the rating is 10\r\n        // else it will be the ')' bracket for which we have to return the second character in the string\r\n        if (rating.charAt(2) === \"0\"){\r\n            return rating.charAt(1) + rating.charAt(2)\r\n        } else {\r\n            return rating.charAt(1)\r\n        }\r\n    }\r\n\r\n    // TODO: figure out how to remove \r\n    const deleteMovie = (id) => {\r\n        myMovies.some(movie => {\r\n            if (id == movie.movie.movieItem.id) {\r\n                localStorage.removeItem(id)\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"heading-page\">My List</h1>\r\n            {myMovies.length ? // If length of movies array is not 0 then return table of movies\r\n            <>\r\n                <Tabs\r\n                defaultActiveKey=\"All\"\r\n                id=\"controlled-tab-example\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"All\" title=\"All Movies\" />\r\n                    {watchStatus.map(status => {\r\n                        return <Tab eventKey={status} title={status} />\r\n                    })}\r\n                </Tabs>\r\n                <table className=\"table-my-list\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '5px'}}></th>\r\n                        <th style={{width: '20px', textAlign: 'center'}}>#</th>\r\n                        <th style={{width: '70px', textAlign: 'center'}}>Image</th>\r\n                        <th>Title</th>\r\n                        <th style={{width: '120px'}}>Date added</th>\r\n                        <th style={{width: '100px',  textAlign: 'center'}}>Score</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    {}\r\n                    {myMovies.map((movie, index) => {\r\n                        movie.map(movie => {\r\n                            console.log(movie)\r\n                            // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\r\n                            if (movie.userStats.status === key || key === \"All\"){\r\n                                return (\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td style={{backgroundColor: determineColorStatus(movie.userStats.status)}}></td>\r\n                                        <td style={{color: '#ffd1df', textAlign: 'center', fontWeight: 'bold'}}>{index + 1}</td>\r\n                                        <td><img src={IMG_BASE_URL + movie.movie.movieItem.poster_path} width={70} /></td>\r\n                                        <td style={{fontWeight: 'bold', fontSize: '22px', letterSpacing: '1px'}}>{movie.movie.movieItem.original_title}</td>\r\n                                        <td style={{fontSize: '16px'}}>{movie.date}</td>\r\n                                        <td style={{fontWeight: 'bold', fontSize: '22px', textAlign: 'center'}}>\r\n                                            {showRatingNumber(movie.userStats.rating)}\r\n                                        </td>\r\n                                        <td style={{width: '10px', padding: '0 20px'}}>\r\n                                            <i class=\"fa fa-trash delete-trash-icon\" aria-hidden=\"true\" onClick={() => {\r\n                                                setModalShow(true);\r\n                                                setDelMovie(movie.movie.movieItem);\r\n                                            }}></i>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        })\r\n                    })}\r\n                </table>\r\n                </>\r\n            : <>\r\n            <p style={{color: 'white'}}>No movies in your list yet...</p><br/>\r\n            <img src=\"https://i.imgur.com/sUpua6W.gif\"/>\r\n            </>}\r\n\r\n            <ModalAction\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n            movie={delMovie}\r\n            function={deleteMovie}\r\n            content={{title: deleteMovieContent.title, description: deleteMovieContent.description, btnTxt: deleteMovieContent.btnTxt}} />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}