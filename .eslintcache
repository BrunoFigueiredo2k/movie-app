[{"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\index.js":"1","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\App.js":"2","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieList.js":"3","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\Movie.js":"4","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\About.js":"5","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieDetails.js":"6","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Login.js":"7","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\SignUp.js":"8","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\firebase.js":"9","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\Auth.js":"10","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Footer.js":"11","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Header.js":"12","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\SimpleTabs.js":"13","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\PopularTab.js":"14","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\MyListTab.js":"15","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\VerticallyCenteredModal.js":"16","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\strings.js":"17","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\utils.js":"18","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\AlertMessage.js":"19","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\PasswordInput.js":"20","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\SearchBar.js":"21","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Movies.js":"22","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Home.js":"23"},{"size":343,"mtime":1609290386413,"results":"24","hashOfConfig":"25"},{"size":959,"mtime":1609797221970,"results":"26","hashOfConfig":"25"},{"size":984,"mtime":1609326275237,"results":"27","hashOfConfig":"25"},{"size":1847,"mtime":1609536217962,"results":"28","hashOfConfig":"25"},{"size":3067,"mtime":1609729510560,"results":"29","hashOfConfig":"25"},{"size":2912,"mtime":1609536253649,"results":"30","hashOfConfig":"25"},{"size":1817,"mtime":1609799386423,"results":"31","hashOfConfig":"25"},{"size":1590,"mtime":1609799419192,"results":"32","hashOfConfig":"25"},{"size":561,"mtime":1608988512834,"results":"33","hashOfConfig":"25"},{"size":641,"mtime":1609067950816,"results":"34","hashOfConfig":"25"},{"size":1107,"mtime":1609289104181,"results":"35","hashOfConfig":"25"},{"size":678,"mtime":1609797048169,"results":"36","hashOfConfig":"25"},{"size":2654,"mtime":1609710452425,"results":"37","hashOfConfig":"25"},{"size":1676,"mtime":1609726122279,"results":"38","hashOfConfig":"25"},{"size":4209,"mtime":1609726256655,"results":"39","hashOfConfig":"25"},{"size":4608,"mtime":1609801030464,"results":"40","hashOfConfig":"25"},{"size":1321,"mtime":1609708752309,"results":"41","hashOfConfig":"25"},{"size":337,"mtime":1609537086577,"results":"42","hashOfConfig":"25"},{"size":1148,"mtime":1609676099162,"results":"43","hashOfConfig":"25"},{"size":841,"mtime":1609680372748,"results":"44","hashOfConfig":"25"},{"size":1188,"mtime":1609726747847,"results":"45","hashOfConfig":"25"},{"size":398,"mtime":1609796989725,"results":"46","hashOfConfig":"25"},{"size":1124,"mtime":1609800941095,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"9mb8xz",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\index.js",[],["100","101"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\App.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieList.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\Movie.js",["102"],"import React from 'react'\r\nimport { Col } from 'react-grid-system'\r\nimport MovieDetails from './MovieDetails'\r\nimport { useHistory, Route } from \"react-router-dom\";\r\nimport { IMG_BASE_URL } from './strings'\r\n\r\nfunction Movie({movie, genres}) {\r\n    const history = useHistory();\r\n    const genreNames = []\r\n    const genreIds = []\r\n\r\n    const learnMoreMovie = () => {\r\n        const clickedMovie = movie\r\n        history.push(`/details/${movie.original_title}`, {...clickedMovie});\r\n    }\r\n\r\n    // Push genre ids of this movie to array\r\n    movie.genre_ids.map(id => genreIds.push(id))\r\n\r\n    // Map through all possible genres for id and name\r\n    genres.map(genre => {\r\n        genreIds.map(id => {\r\n            if (id === genre.id){\r\n                genreNames.push(genre.name)\r\n            }\r\n            return true\r\n        })\r\n        return true\r\n    })\r\n\r\n    const genresLen = genreNames.length\r\n\r\n    return (\r\n        <>\r\n        <Col style={{margin: '20px 0'}}>\r\n            <Route\r\n                path={`details/${movie.original_title}`}\r\n                render={movie => (\r\n                    <MovieDetails {...movie} movie={movie} />\r\n                )}\r\n            />\r\n            <div className=\"card-movie\">\r\n                <img className=\"poster-img\" onClick={learnMoreMovie} src={IMG_BASE_URL + movie.poster_path}></img>\r\n                <p className=\"title\">{movie.original_title}</p>\r\n                <p className=\"genres\">{genreNames.map((name, i) => {\r\n                    // Last item in array with no comma\r\n                    if (genresLen === i + 1) {\r\n                        return name\r\n                    } else {\r\n                        return name + \", \"\r\n                    }\r\n                })}\r\n                </p>\r\n            </div>\r\n        </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\About.js",["103"],"import React from 'react'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nimport { Row, Col } from 'react-grid-system';\r\nimport {watchStatus, COLORS_BORDER_LEFT_STATUS} from '../strings'\r\n\r\nfunction About() {\r\n    return (\r\n        <>\r\n        <div className=\"section\" id=\"about-section\">\r\n        <Header/>\r\n            <div className=\"container\" style={{minHeight: '90vh'}}>\r\n                <h1 style={{textAlign: 'center', fontSize: '65px', padding: '100px 0', color: 'white'}}>About</h1>\r\n                <Row style={{color: 'white', marginBottom: '60px'}}>\r\n                    <Col lg={8}>\r\n                        <h2 style={{fontSize: '30px'}}>What I used</h2>\r\n                        <p className=\"paragraph\">For this React movie app I used TMDB API to fetch the most popular movies at the moment. <br/><br/> The Movie Database (TMDb) is a community built movie and TV database. Every piece of data has been added by the community dating back to 2008. TMDb's strong international focus and breadth of data is largely unmatched and very impressive.</p>\r\n                    </Col>\r\n                    <Col style={{textAlign: 'center'}}>\r\n                        <img src=\"https://pbs.twimg.com/profile_images/1243623122089041920/gVZIvphd_400x400.jpg\" \r\n                        style={{border: '10px double #0ceafa', borderRadius: '50%', height: '250px', boxShadow: '0 0 10px 2px rgba(0, 0, 0, 0.26)'}}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{color: 'white', marginTop: '60px', marginBottom: '60px'}}>\r\n                    <Col>\r\n                        <h2 style={{fontSize: '30px'}}>Legend watch status colors</h2>\r\n                        <p className=\"paragraph\">This is a legend for the colors of the watch status used in the 'My list' table.</p>\r\n                        <table className=\"table-my-list table-legend-about\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th style={{width: '5%'}}>Color</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {watchStatus.map((status, i) => {\r\n                                    console.log(status)\r\n                                    console.log(i)\r\n                                    return (\r\n                                    <tr>\r\n                                        <td style={{backgroundColor: COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)}}></td>\r\n                                        <td style={{fontWeight: 'bold'}}>{status}</td>\r\n                                    </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        <Footer/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\MovieDetails.js",["104"],"import React, {useState} from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Row, Col } from 'react-grid-system'\r\nimport Header from './layout/Header'\r\nimport VerticallyCenteredModal from './layout/VerticallyCenteredModal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { IMG_BASE_URL } from './strings'\r\n\r\nconst MovieDetails = () => {\r\n    const location = useLocation()\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <div className=\"movie-details section\">\r\n            <Header/>\r\n            <div className=\"movie-backdrop-img\" id=\"movie-backdrop-img\" \r\n            style={{backgroundImage: `url(${IMG_BASE_URL + location.state.backdrop_path})`}}>\r\n                <div className=\"wrapper\">\r\n                    <h1 className=\"movie-details-title\">{location.state.original_title}</h1>\r\n                    <span style={{fontSize: '30px', color: '#ccc', fontWeight: '600'}}> ({location.state.release_date.slice(0, 4)})</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <img src={IMG_BASE_URL + location.state.poster_path} className=\"movie-details-poster\"></img>\r\n                    </Col>\r\n                    <Col>\r\n                        <ul className=\"movie-details-top-stats horizontal-ul\">\r\n                            <li><span className=\"average-rating\">{location.state.vote_average}</span></li>\r\n                            <li><span style={{marginLeft: '-50px', fontSize: '18px', color: '#ccc'}}>/ {location.state.vote_count} votes</span></li>\r\n                            <li><p className=\"tag\">Popularity: <b>{Math.round(location.state.popularity)}</b></p></li>\r\n                            <li><Button variant=\"success\" onClick={() => setModalShow(true)}>Add to list</Button></li>\r\n                        </ul>\r\n                        <div className=\"movie-details-bottom-stats\">\r\n                            <p className=\"subtitle\">Language:</p>\r\n                            <p className=\"description\" style={{fontSize: '14px', textTransform: 'uppercase'}}>{location.state.original_language}</p>\r\n                            \r\n                            <p className=\"subtitle\">Release date:</p>\r\n                            <p className=\"description\" style={{fontSize: '14px'}}>{location.state.release_date}</p>\r\n                            \r\n                            <p className=\"subtitle\">Description:</p>\r\n                            <p className=\"description\" style={{fontSize: '14px'}}>{location.state.overview}</p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <VerticallyCenteredModal show={modalShow} movie={location.state} onHide={() => setModalShow(false)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Login.js",["105"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\SignUp.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\firebase.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\Auth.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Footer.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\Header.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\SimpleTabs.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\PopularTab.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\tabs\\MyListTab.js",["106","107","108","109"],"import React, { useEffect, useState } from 'react';\r\nimport { IMG_BASE_URL, LOCAL_STORAGE_KEY, watchStatus, COLORS_BORDER_LEFT_STATUS } from '../../strings'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nexport default function MyListTab() {\r\n    const [myMovies, setMyMovies] = useState([])\r\n    const [key, setKey] = useState('All');\r\n\r\n    useEffect(() =>{\r\n        const storedMovies = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        console.log(storedMovies)\r\n        if (storedMovies) setMyMovies(storedMovies)\r\n    }, [])\r\n\r\n    const determineColorStatus = (statusWatching) => {\r\n        for (let i = 0; i < watchStatus.length; i++){\r\n            switch (statusWatching){\r\n                case watchStatus[i]:\r\n                    return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showRatingNumber = (rating) => {\r\n        // Check if the third character in the string is a 0, because if it is then the rating is 10\r\n        // else it will be the ')' bracket for which we have to return the second character in the string\r\n        if (rating.charAt(2) === \"0\"){\r\n            return rating.charAt(1) + rating.charAt(2)\r\n        } else {\r\n            return rating.charAt(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"heading-page\">My List</h1>\r\n            {myMovies.length ? // If length of movies array is not 0 then return table of movies\r\n            <>\r\n                <Tabs\r\n                defaultActiveKey=\"All\"\r\n                id=\"controlled-tab-example\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"All\" title=\"All Movies\" />\r\n                    {watchStatus.map(status => {\r\n                        return <Tab eventKey={status} title={status} />\r\n                    })}\r\n                </Tabs>\r\n                <table className=\"table-my-list\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '5px'}}></th>\r\n                        <th style={{width: '20px', textAlign: 'center'}}>#</th>\r\n                        <th style={{width: '70px', textAlign: 'center'}}>Image</th>\r\n                        <th>Title</th>\r\n                        <th style={{width: '120px'}}>Date added</th>\r\n                        <th style={{width: '100px',  textAlign: 'center'}}>Score</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {myMovies.map((movie, index) => {\r\n                        // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\r\n                        if (movie.userStats.status === key || key === \"All\"){\r\n                            return (\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td style={{backgroundColor: determineColorStatus(movie.userStats.status)}}></td>\r\n                                    <td style={{color: '#ffd1df', textAlign: 'center', fontWeight: 'bold'}}>{index + 1}</td>\r\n                                    <td><img src={IMG_BASE_URL + movie.movie.movieItem.poster_path} width={70} /></td>\r\n                                    <td style={{fontWeight: 'bold', fontSize: '22px', letterSpacing: '1px'}}>{movie.movie.movieItem.original_title}</td>\r\n                                    <td style={{fontSize: '16px'}}>{movie.date}</td>\r\n                                    <td style={{fontWeight: 'bold', fontSize: '22px', textAlign: 'center'}}>\r\n                                        {showRatingNumber(movie.userStats.rating)}\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            )\r\n                        }\r\n                    })}\r\n                </table>\r\n                </>\r\n            : <>\r\n            <p style={{color: 'white'}}>No movies in your list yet...</p><br/>\r\n            <img src=\"https://i.imgur.com/sUpua6W.gif\"/>\r\n            </>}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\VerticallyCenteredModal.js",["110","111","112","113"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\strings.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\utils.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\AlertMessage.js",["114"],"import React, {useState} from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function AlertMessage(props) {\r\n    const [show, setShow] = useState(true);\r\n    const btnContent = props.details.content.button\r\n    console.log(btnContent)\r\n    let history = useHistory();\r\n\r\n    const handleRouteHideBtn = () => {\r\n        history.push(props.details.hideBtn.route);\r\n    }\r\n\r\n    const DisplayHideBtn = () => {\r\n        return (\r\n            <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={() => setShow(false), handleRouteHideBtn} variant={\"outline-\" + props.details.variant}>\r\n                {btnContent}\r\n            </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Alert show={show} variant={props.details.variant}>\r\n            <Alert.Heading>{props.details.content.title}</Alert.Heading>\r\n            <p>{props.details.content.description}</p>\r\n            {props.details.hideBtn.display ? \r\n                <DisplayHideBtn />\r\n            : null}\r\n        </Alert>\r\n    );\r\n}\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\layout\\PasswordInput.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\SearchBar.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Movies.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\src\\components\\pages\\Home.js",["115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":43,"column":17,"nodeType":"122","endLine":43,"endColumn":109},{"ruleId":"120","severity":1,"message":"121","line":20,"column":25,"nodeType":"122","endLine":21,"endColumn":151},{"ruleId":"120","severity":1,"message":"121","line":27,"column":25,"nodeType":"122","endLine":27,"endColumn":111},{"ruleId":"120","severity":1,"message":"121","line":39,"column":9,"nodeType":"122","endLine":39,"endColumn":46},{"ruleId":"123","severity":1,"message":"124","line":18,"column":13,"nodeType":"125","messageId":"126","endLine":21,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":61,"column":50,"nodeType":"129","messageId":"130","endLine":61,"endColumn":52},{"ruleId":"120","severity":1,"message":"121","line":69,"column":41,"nodeType":"122","endLine":69,"endColumn":114},{"ruleId":"120","severity":1,"message":"121","line":84,"column":13,"nodeType":"122","endLine":84,"endColumn":57},{"ruleId":"127","severity":1,"message":"131","line":42,"column":29,"nodeType":"129","messageId":"130","endLine":42,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":57,"column":5,"nodeType":"125","messageId":"126","endLine":73,"endColumn":6},{"ruleId":"123","severity":1,"message":"124","line":60,"column":11,"nodeType":"125","messageId":"126","endLine":63,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":68,"column":11,"nodeType":"125","messageId":"126","endLine":71,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":19,"column":50,"nodeType":"134","messageId":"135","endLine":19,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":11,"column":50,"nodeType":"122","endLine":11,"endColumn":106},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.some() expects a value to be returned at the end of arrow function.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]