{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\GitHub\\\\react-projects\\\\movie-app\\\\frontend\\\\src\\\\components\\\\layout\\\\tabs\\\\MyListTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent } from '../../strings';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ModalAction from '../ModalAction';\nimport MyMoviesService from '../../../services/MyMoviesService';\nexport default function MyListTab(props) {\n  _s();\n\n  const [myMovies, setMyMovies] = useState([]);\n  const [key, setKey] = useState('All');\n  const [modalShow, setModalShow] = useState(false);\n  const [delMovie, setDelMovie] = useState(null); // useEffect(() => {\n  //     let movies = MyMoviesService.getMyMovies(props.movies);\n  //     // Loop through all added movies and set movies to state\n  //     setMyMovies(movies)\n  // }, [myMovies])\n\n  let ids = [];\n  let movies = [];\n  const myPreviousState = usePrevious(props);\n  useEffect(() => {\n    if (myPreviousState && !_.isEqual(myPreviousState, apiOptions)) {\n      // Loop through all movies and add ids to list\n      props.movies.map(movie => {\n        ids.push(movie.id);\n      }); // Loop through all ids and getItems from localstorage based on id, if this doesn't return null then add movie to list\n\n      ids.map(id => {\n        let storedMovie = JSON.parse(localStorage.getItem(id.toString()));\n        if (storedMovie != null) movies.push(storedMovie[0]);\n      }); // Loop through all added movies and set movies to state\n\n      setMyMovies(movies);\n    }\n  }, [myMovies]);\n\n  const determineColorStatus = statusWatching => {\n    for (let i = 0; i < watchStatus.length; i++) {\n      switch (statusWatching) {\n        case watchStatus[i]:\n          return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7);\n      }\n    }\n  };\n\n  const showRatingNumber = rating => {\n    // Check if the third character in the string is a 0, because if it is then the rating is 10\n    // else it will be the ')' bracket for which we have to return the second character in the string\n    if (rating.charAt(2) === \"0\") {\n      return rating.charAt(1) + rating.charAt(2);\n    } else {\n      return rating.charAt(1);\n    }\n  };\n\n  const handleClickDelete = movie => {\n    setDelMovie(movie);\n    setModalShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading-page\",\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), myMovies.length ?\n    /*#__PURE__*/\n    // If length of movies array is not 0 then return table of movies\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"All\",\n        id: \"controlled-tab-example\",\n        activeKey: key,\n        onSelect: k => setKey(k),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"All\",\n          title: \"All Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), watchStatus.map(status => {\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: status,\n            title: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-my-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '20px',\n                textAlign: 'center'\n              },\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '70px',\n                textAlign: 'center'\n              },\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '120px'\n              },\n              children: \"Date added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '100px',\n                textAlign: 'center'\n              },\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), myMovies.map((movie, index) => {\n          // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\n          if (movie.userStats.status === key || key === \"All\") {\n            return /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: determineColorStatus(movie.userStats.status)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: '#ffd1df',\n                    textAlign: 'center',\n                    fontWeight: 'bold'\n                  },\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: IMG_BASE_URL + movie.movie.movieItem.poster_path,\n                    width: 70\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '22px',\n                    letterSpacing: '1px'\n                  },\n                  children: movie.movie.movieItem.original_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontSize: '16px'\n                  },\n                  children: movie.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '22px',\n                    textAlign: 'center'\n                  },\n                  children: showRatingNumber(movie.userStats.rating)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: '10px',\n                    padding: '0 20px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-trash delete-trash-icon\",\n                    \"aria-hidden\": \"true\",\n                    onClick: () => {\n                      handleClickDelete(movie.movie);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"No movies in your list yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/sUpua6W.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), modalShow ? /*#__PURE__*/_jsxDEV(ModalAction, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      movie: delMovie,\n      movies: myMovies,\n      content: {\n        title: deleteMovieContent.title,\n        description: deleteMovieContent.description,\n        btnTxt: deleteMovieContent.btnTxt\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyListTab, \"vudkEckbfJI66tYYJazrEwqb0nw=\", true);\n\n_c = MyListTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyListTab\");","map":{"version":3,"sources":["C:/Users/bruno/Documents/GitHub/react-projects/movie-app/frontend/src/components/layout/tabs/MyListTab.js"],"names":["React","useEffect","useState","useRef","IMG_BASE_URL","watchStatus","COLORS_BORDER_LEFT_STATUS","deleteMovieContent","Tabs","Tab","ModalAction","MyMoviesService","MyListTab","props","myMovies","setMyMovies","key","setKey","modalShow","setModalShow","delMovie","setDelMovie","ids","movies","myPreviousState","usePrevious","_","isEqual","apiOptions","map","movie","push","id","storedMovie","JSON","parse","localStorage","getItem","toString","determineColorStatus","statusWatching","i","length","slice","showRatingNumber","rating","charAt","handleClickDelete","k","status","width","textAlign","index","userStats","backgroundColor","color","fontWeight","movieItem","poster_path","fontSize","letterSpacing","original_title","date","padding","title","description","btnTxt"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\r\nimport {IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent} from '../../strings'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport ModalAction from '../ModalAction'\r\nimport MyMoviesService from '../../../services/MyMoviesService'\r\n\r\nexport default function MyListTab(props) {\r\n    const [myMovies, setMyMovies] = useState([])\r\n    const [key, setKey] = useState('All');\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [delMovie, setDelMovie] = useState(null);\r\n\r\n   \r\n    // useEffect(() => {\r\n    //     let movies = MyMoviesService.getMyMovies(props.movies);\r\n\r\n    //     // Loop through all added movies and set movies to state\r\n    //     setMyMovies(movies)\r\n    // }, [myMovies])\r\n\r\n    let ids = []\r\n    let movies = []\r\n    const myPreviousState = usePrevious(props);\r\n\r\n    useEffect(() => {\r\n        if (myPreviousState && !_.isEqual(myPreviousState, apiOptions)) {\r\n            // Loop through all movies and add ids to list\r\n            props.movies.map(movie => {\r\n                ids.push(movie.id)\r\n            })\r\n\r\n            // Loop through all ids and getItems from localstorage based on id, if this doesn't return null then add movie to list\r\n            ids.map(id => {\r\n                let storedMovie = JSON.parse(localStorage.getItem(id.toString()))\r\n                if (storedMovie != null) movies.push(storedMovie[0])\r\n            })\r\n\r\n            // Loop through all added movies and set movies to state\r\n            setMyMovies(movies)\r\n        }\r\n    }, [myMovies])\r\n\r\n    const determineColorStatus = (statusWatching) => {\r\n        for (let i = 0; i < watchStatus.length; i++) {\r\n            switch (statusWatching) {\r\n                case watchStatus[i]:\r\n                    return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showRatingNumber = (rating) => {\r\n        // Check if the third character in the string is a 0, because if it is then the rating is 10\r\n        // else it will be the ')' bracket for which we have to return the second character in the string\r\n        if (rating.charAt(2) === \"0\") {\r\n            return rating.charAt(1) + rating.charAt(2)\r\n        } else {\r\n            return rating.charAt(1)\r\n        }\r\n    }\r\n\r\n    const handleClickDelete = (movie) => {\r\n        setDelMovie(movie)\r\n        setModalShow(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"heading-page\">My List</h1>\r\n            {myMovies.length ? // If length of movies array is not 0 then return table of movies\r\n                <>\r\n                    <Tabs\r\n                        defaultActiveKey=\"All\"\r\n                        id=\"controlled-tab-example\"\r\n                        activeKey={key}\r\n                        onSelect={(k) => setKey(k)}>\r\n                        <Tab eventKey=\"All\" title=\"All Movies\"/>\r\n                        {watchStatus.map(status => {\r\n                            return <Tab eventKey={status} title={status}/>\r\n                        })}\r\n                    </Tabs>\r\n                    <table className=\"table-my-list\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{width: '5px'}}></th>\r\n                                <th style={{width: '20px', textAlign: 'center'}}>#</th>\r\n                                <th style={{width: '70px', textAlign: 'center'}}>Image</th>\r\n                                <th>Title</th>\r\n                                <th style={{width: '120px'}}>Date added</th>\r\n                                <th style={{width: '100px', textAlign: 'center'}}>Score</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        {myMovies.map((movie, index) => {\r\n                            // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\r\n                            if (movie.userStats.status === key || key === \"All\") {\r\n                                return (\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{backgroundColor: determineColorStatus(movie.userStats.status)}}></td>\r\n                                            <td style={{\r\n                                                color: '#ffd1df',\r\n                                                textAlign: 'center',\r\n                                                fontWeight: 'bold'\r\n                                            }}>{index + 1}</td>\r\n                                            <td>\r\n                                                <img src={IMG_BASE_URL + movie.movie.movieItem.poster_path} width={70}/>\r\n                                            </td>\r\n                                            <td style={{\r\n                                                fontWeight: 'bold',\r\n                                                fontSize: '22px',\r\n                                                letterSpacing: '1px'\r\n                                            }}>{movie.movie.movieItem.original_title}</td>\r\n                                            <td style={{fontSize: '16px'}}>{movie.date}</td>\r\n                                            <td style={{fontWeight: 'bold', fontSize: '22px', textAlign: 'center'}}>\r\n                                                {showRatingNumber(movie.userStats.rating)}\r\n                                            </td>\r\n                                            <td style={{width: '10px', padding: '0 20px'}}>\r\n                                                <i className=\"fa fa-trash delete-trash-icon\" aria-hidden=\"true\"\r\n                                                   onClick={() => {\r\n                                                       handleClickDelete(movie.movie)\r\n                                                   }}></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </table>\r\n                </>\r\n                : <>\r\n                    <p style={{color: 'white'}}>No movies in your list yet...</p>\r\n                    <br/>\r\n                    <img src=\"https://i.imgur.com/sUpua6W.gif\"/>\r\n                </>}\r\n\r\n            {modalShow ?\r\n                <ModalAction\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    movie={delMovie}\r\n                    movies={myMovies}\r\n                    content={{\r\n                        title: deleteMovieContent.title,\r\n                        description: deleteMovieContent.description,\r\n                        btnTxt: deleteMovieContent.btnTxt\r\n                    }}/>\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}