[{"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\index.js":"1","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\App.js":"2","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\reducers\\index.js":"3","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\Auth.js":"4","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\Movies.js":"5","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\Home.js":"6","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\Login.js":"7","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\About.js":"8","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\MovieDetails.js":"9","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\SignUp.js":"10","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\actions\\index.js":"11","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\reducers\\counter.js":"12","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\reducers\\isLogged.js":"13","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\firebase.js":"14","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\strings.js":"15","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\Header.js":"16","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\Footer.js":"17","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\SimpleTabs.js":"18","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\PasswordInput.js":"19","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\VerticallyCenteredModal.js":"20","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\AlertMessage.js":"21","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\utils.js":"22","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\tabs\\MyListTab.js":"23","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\tabs\\PopularTab.js":"24","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\ModalAction.js":"25","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\MovieList.js":"26","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\SearchBar.js":"27","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\Movie.js":"28","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\tabs\\TopMoviesTab.js":"29","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\services\\MovieService.js":"30","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\utils\\MyMovies.js":"31"},{"size":689,"mtime":1611436828227,"results":"32","hashOfConfig":"33"},{"size":1256,"mtime":1611436827072,"results":"34","hashOfConfig":"33"},{"size":236,"mtime":1610156934275,"results":"35","hashOfConfig":"33"},{"size":717,"mtime":1611436826791,"results":"36","hashOfConfig":"33"},{"size":396,"mtime":1611436826805,"results":"37","hashOfConfig":"33"},{"size":1407,"mtime":1611436827260,"results":"38","hashOfConfig":"33"},{"size":2124,"mtime":1611436828523,"results":"39","hashOfConfig":"33"},{"size":4325,"mtime":1611436828589,"results":"40","hashOfConfig":"33"},{"size":3396,"mtime":1611436828390,"results":"41","hashOfConfig":"33"},{"size":1887,"mtime":1611436826883,"results":"42","hashOfConfig":"33"},{"size":362,"mtime":1610158262362,"results":"43","hashOfConfig":"33"},{"size":276,"mtime":1611436827746,"results":"44","hashOfConfig":"33"},{"size":218,"mtime":1611436826981,"results":"45","hashOfConfig":"33"},{"size":561,"mtime":1608988512834,"results":"46","hashOfConfig":"33"},{"size":1609,"mtime":1611436828791,"results":"47","hashOfConfig":"33"},{"size":776,"mtime":1611436827635,"results":"48","hashOfConfig":"33"},{"size":1551,"mtime":1611436828099,"results":"49","hashOfConfig":"33"},{"size":2844,"mtime":1611531136207,"results":"50","hashOfConfig":"33"},{"size":917,"mtime":1611436827249,"results":"51","hashOfConfig":"33"},{"size":5923,"mtime":1611436828510,"results":"52","hashOfConfig":"33"},{"size":1160,"mtime":1611436827452,"results":"53","hashOfConfig":"33"},{"size":337,"mtime":1609537086577,"results":"54","hashOfConfig":"33"},{"size":6227,"mtime":1611785355226,"results":"55","hashOfConfig":"33"},{"size":1795,"mtime":1611436827085,"results":"56","hashOfConfig":"33"},{"size":1956,"mtime":1611436828625,"results":"57","hashOfConfig":"33"},{"size":907,"mtime":1611531175773,"results":"58","hashOfConfig":"33"},{"size":1359,"mtime":1611436828490,"results":"59","hashOfConfig":"33"},{"size":1925,"mtime":1611436827980,"results":"60","hashOfConfig":"33"},{"size":7472,"mtime":1611859146331,"results":"61","hashOfConfig":"33"},{"size":540,"mtime":1611530985293,"results":"62","hashOfConfig":"33"},{"size":624,"mtime":1611785288173,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1o603ms",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\index.js",[],["138","139"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\App.js",["140"],"import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport MovieDetails from \"./components/MovieDetails\"\nimport Home from './components/pages/Home'\nimport Movies from './components/pages/Movies'\nimport About from './components/pages/About'\nimport Login from \"./components/pages/Login\"\nimport SignUp from \"./components/pages/SignUp\"\nimport {AuthProvider} from \"./Auth\"\nimport './css/App.css'\nimport {useSelector} from 'react-redux'\nimport {deleteMovie} from './redux/actions/index'\n\nfunction App() {\n    console.log(useSelector(state => state.loggedReducer))\n    return (\n        <>\n            <AuthProvider>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route exact path=\"/movies\" component={Movies}/>\n                        <Route path=\"/about\" component={About}/>\n                        <Route path=\"/details\" component={MovieDetails}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/signup\" component={SignUp}/>\n                    </Switch>\n                </Router>\n            </AuthProvider>\n        </>\n    );\n}\n\nexport default App\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\reducers\\index.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\Auth.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\Movies.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\Home.js",["141"],"import React from 'react'\r\nimport {Row, Col} from 'react-grid-system';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"landing-page\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"container\">\r\n                    <Row>\r\n                        <Col className=\"img-col\">\r\n                            <img src=\"https://i.pinimg.com/originals/1b/cd/fa/1bcdfa255e6dc496a5ebd759136f4b56.png\"/>\r\n                        </Col>\r\n                        <Col>\r\n                            <h1>Get a grip on your movie watch list!</h1>\r\n                            <p>This app will make your life easier as you'll be able to keep track of your watched\r\n                                movies to prevent confusion! Find your\r\n                                <b style={{textDecoration: 'underline'}}>favorite movies</b>\r\n                                and add them to your (wish)list signing up or logging into your account.\r\n                            </p>\r\n                            <Link to=\"/signup\" className=\"cta\">Signup</Link>\r\n                            or\r\n                            <Link to=\"/login\" style={{marginLeft: '20px'}} className=\"cta cta-outline\">Login</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\Login.js",["142"],"import React, {useCallback, useContext} from \"react\";\r\nimport {withRouter, Redirect} from \"react-router\";\r\nimport app from \"../../firebase.js\";\r\nimport {AuthContext} from \"../../Auth\";\r\nimport {Container, Row, Col} from 'react-grid-system';\r\nimport illustration from '../../images/illustration-cinema.svg';\r\nimport wave from '../../images/bg-wave.svg'\r\nimport {Link} from \"react-router-dom\"\r\nimport PasswordInput from \"../layout/PasswordInput\"\r\n\r\nconst Login = ({history}) => {\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const {email, password} = event.target.elements;\r\n            try {\r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value);\r\n                history.push(\"/movies\");\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n\r\n    // If we have current user redirect to movies page\r\n    if (currentUser) {\r\n        return <Redirect to=\"/movies\"/>;\r\n    }\r\n\r\n    return (\r\n        <Container fluid=\"md\">\r\n            <Row className=\"login\">\r\n                <Col className=\"illustration\" style={{backgroundImage: `url(${wave})`}}>\r\n                    <img src={illustration} height={600}></img>\r\n                </Col>\r\n                <Col className=\"container login-form middle\">\r\n                    <h2>Log in</h2>\r\n                    <form onSubmit={handleLogin}>\r\n                        <label for=\"email\">Email</label>\r\n                        <input name=\"email\" type=\"email\" placeholder=\"Email\" required/>\r\n\r\n                        <PasswordInput/>\r\n\r\n                        <button type=\"submit\">Log in</button>\r\n                    </form>\r\n                    <p style={{textAlign: 'center'}}>No account yet?\r\n                        <Link to=\"/signup\" className=\"link\">Sign up</Link>\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\About.js",["143","144"],"import React from 'react'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nimport {Row, Col} from 'react-grid-system';\r\nimport {watchStatus, COLORS_BORDER_LEFT_STATUS} from '../strings'\r\n\r\nfunction About() {\r\n    return (\r\n        <>\r\n            <div className=\"section\" id=\"about-section\">\r\n                <Header/>\r\n                <div className=\"container\" style={{minHeight: '90vh'}}>\r\n                    <h1 style={{textAlign: 'center', fontSize: '65px', padding: '100px 0', color: 'white'}}>About</h1>\r\n                    <Row style={{color: 'white', marginBottom: '60px'}}>\r\n                        <Col lg={8}>\r\n                            <h2 style={{fontSize: '30px'}}>What I used</h2>\r\n                            <p className=\"paragraph\">For this React movie app I used TMDB API to fetch the most popular\r\n                                movies at the moment.\r\n                                <br/>\r\n                                <br/>\r\n                                The Movie Database (TMDb) is a community built movie and TV database. Every piece of\r\n                                data has been added by the community dating back to 2008. TMDb's strong international\r\n                                focus and breadth of data is largely unmatched and very impressive.\r\n                            </p>\r\n                        </Col>\r\n                        <Col style={{textAlign: 'center'}}>\r\n                            <img src=\"https://pbs.twimg.com/profile_images/1243623122089041920/gVZIvphd_400x400.jpg\"\r\n                                 style={{\r\n                                     border: '10px double #0ceafa',\r\n                                     borderRadius: '50%',\r\n                                     height: '250px',\r\n                                     boxShadow: '0 0 10px 2px rgba(0, 0, 0, 0.26)'\r\n                                 }}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{color: 'white', margin: '10% 0', marginBottom: '60px'}}>\r\n                        <Col style={{verticalAlign: 'middle', display: 'table-cell'}}>\r\n                            <img src=\"https://media.makeameme.org/created/you-are-a-fc227c48b8.jpg\"\r\n                                 style={{\r\n                                     height: '300px',\r\n                                     boxShadow: '0 0 10px 2px rgba(0, 0, 0, 0.26)',\r\n                                     borderRadius: '20px',\r\n                                     marginTop: '50px'\r\n                                 }}/>\r\n                        </Col>\r\n                        <Col lg={7}>\r\n                            <h2 style={{fontSize: '30px'}}>Legend watch status colors</h2>\r\n                            <p className=\"paragraph\">This is a legend for the colors of the watch status used in the 'My\r\n                                list' table.\r\n                            </p>\r\n                            <table className=\"table-my-list table-legend-about\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{width: '5%'}}>Color</th>\r\n                                        <th>Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {watchStatus.map((status, i) => {\r\n                                        console.log(status)\r\n                                        console.log(i)\r\n                                        return (\r\n                                            <tr>\r\n                                                <td style={{backgroundColor: COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)}}></td>\r\n                                                <td style={{fontWeight: 'bold'}}>{status}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\MovieDetails.js",["145"],"import React, {useState} from 'react';\r\nimport {useLocation} from 'react-router-dom'\r\nimport {Row, Col} from 'react-grid-system'\r\nimport Header from './layout/Header'\r\nimport VerticallyCenteredModal from './layout/VerticallyCenteredModal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {IMG_BASE_URL} from './strings'\r\n\r\nconst MovieDetails = () => {\r\n    const location = useLocation()\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <div className=\"movie-details section\">\r\n            <Header/>\r\n            <div className=\"movie-backdrop-img\" id=\"movie-backdrop-img\"\r\n                 style={{backgroundImage: `url(${IMG_BASE_URL + location.state.backdrop_path})`}}>\r\n                <div className=\"wrapper\">\r\n                    <h1 className=\"movie-details-title\">{location.state.original_title}</h1>\r\n                    <span style={{fontSize: '30px', color: '#ccc', fontWeight: '600'}}>\r\n                        ({location.state.release_date.slice(0, 4)})\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <img src={IMG_BASE_URL + location.state.poster_path} className=\"movie-details-poster\"></img>\r\n                    </Col>\r\n                    <Col>\r\n                        <ul className=\"movie-details-top-stats horizontal-ul\">\r\n                            <li>\r\n                                <span className=\"average-rating\">{location.state.vote_average}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span style={{marginLeft: '-50px', fontSize: '18px', color: '#ccc'}}>\r\n                                    / {location.state.vote_count} votes\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                <p className=\"tag\">Popularity:\r\n                                    <b>{Math.round(location.state.popularity)}</b>\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <Button variant=\"success\" onClick={() => setModalShow(true)}>Add to list</Button>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"movie-details-bottom-stats\">\r\n                            <p className=\"subtitle\">Language:</p>\r\n                            <p className=\"description\" style={{\r\n                                fontSize: '14px',\r\n                                textTransform: 'uppercase'\r\n                            }}>{location.state.original_language}</p>\r\n\r\n                            <p className=\"subtitle\">Release date:</p>\r\n                            <p className=\"description\" style={{fontSize: '14px'}}>{location.state.release_date}</p>\r\n\r\n                            <p className=\"subtitle\">Description:</p>\r\n                            <p className=\"description\" style={{fontSize: '14px'}}>{location.state.overview}</p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <VerticallyCenteredModal show={modalShow} movie={location.state} onHide={() => setModalShow(false)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\pages\\SignUp.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\actions\\index.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\reducers\\counter.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\redux\\reducers\\isLogged.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\firebase.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\strings.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\SimpleTabs.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\PasswordInput.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\VerticallyCenteredModal.js",["146","147","148","149"],"import React, {useState} from 'react'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport uuidv4 from 'uuid/v4';\r\nimport Form from 'react-bootstrap/Form'\r\nimport AlertMessage from './AlertMessage'\r\nimport {\r\n    ALERT_POSITIVE_ADDED_CONTENT,\r\n    watchStatus,\r\n    ratings,\r\n    COLORS_BORDER_LEFT_RATINGS,\r\n    COLORS_BORDER_LEFT_STATUS,\r\n    ALERT_WARNING_ADDED_CONTENT\r\n} from '../strings'\r\nimport {getCurrentDate} from '../utils'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function VerticallyCenteredModal(props) {\r\n    const [rating, setRating] = useState('Select your rating')\r\n    const [status, setStatus] = useState('Watching')\r\n    const [addedToList, setAddedToList] = useState(false)\r\n    const [detailsAlertMessage, setDetailsAlertMessage] = useState()\r\n\r\n    const addMovieToList = (e) => {\r\n        const movieItem = props.movie;\r\n        const movieObject = {id: uuidv4(), movie: {movieItem}, userStats: {rating, status}, date: getCurrentDate()}\r\n        let prevMovies = JSON.parse(localStorage.getItem(props.movie.id)) || [];\r\n\r\n        // If check on whether movie is in list returns false then display warning Alert and false else push to localstorage\r\n        if (!isMovieInList(prevMovies, movieItem)) {\r\n            setDetailsAlertMessage({\r\n                hideBtn: {display: true, route: '/movies'},\r\n                content: ALERT_WARNING_ADDED_CONTENT,\r\n                variant: 'danger'\r\n            })\r\n        } else {\r\n            setDetailsAlertMessage({\r\n                hideBtn: {display: true, route: '/movies'},\r\n                content: ALERT_POSITIVE_ADDED_CONTENT,\r\n                variant: 'success'\r\n            })\r\n            // Push movie to localstorage\r\n            prevMovies.push(movieObject);\r\n            localStorage.setItem(props.movie.id, JSON.stringify(prevMovies));\r\n        }\r\n\r\n        setAddedToList(true)\r\n    }\r\n\r\n    const isMovieInList = (storedMovies, toAddMovie) => {\r\n        let inList;\r\n        storedMovies.some(movie => {\r\n            if (movie.movie.movieItem.id === toAddMovie.id) {\r\n                inList = true\r\n                return true // break out of loop\r\n            } else {\r\n                inList = false\r\n            }\r\n        })\r\n\r\n        if (inList) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // Returns dropdown item with corresponding border left color\r\n    const setColorDropdownItems = (value, type) => {\r\n        let i;\r\n        switch (type) {\r\n            case 'rating':\r\n                for (i = 0; i < ratings.length; i++) {\r\n                    switch (value) {\r\n                        case ratings[i]:\r\n                            return <Dropdown.Item style={{borderLeft: COLORS_BORDER_LEFT_RATINGS[i]}}\r\n                                                  eventKey={value}>{value}</Dropdown.Item>\r\n                    }\r\n                }\r\n                break;\r\n            case 'status':\r\n                for (i = 0; i < watchStatus.length; i++) {\r\n                    switch (value) {\r\n                        case watchStatus[i]:\r\n                            return <Dropdown.Item style={{borderLeft: COLORS_BORDER_LEFT_STATUS[i]}}\r\n                                                  eventKey={value}>{value}</Dropdown.Item>\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n    // Handle setting state of dropdown items\r\n    const handleSelectRating = (e) => {\r\n        setRating(e)\r\n    }\r\n    const handleSelectStatus = (e) => {\r\n        setStatus(e)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!addedToList ?\r\n                <Modal\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <ModalHeader closeButton>\r\n                        <ModalTitle id=\"contained-modal-title-vcenter\">\r\n                            Add {props.movie.original_title} to your list?\r\n                        </ModalTitle>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <Form.Label>Give your rating</Form.Label>\r\n                            <DropdownButton alignRight title={rating} id=\"dropdown-menu-align-right\"\r\n                                            onSelect={handleSelectRating}>\r\n                                {ratings.map(rating => setColorDropdownItems(rating, 'rating'))}\r\n                            </DropdownButton>\r\n                            <br/>\r\n\r\n                            <Form.Label>Watch status</Form.Label>\r\n                            <DropdownButton alignRight title={status} id=\"dropdown-menu-align-right\"\r\n                                            onSelect={handleSelectStatus}>\r\n                                {watchStatus.map(status => setColorDropdownItems(status, 'status'))}\r\n                            </DropdownButton>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button onClick={addMovieToList} variant=\"success\">Add to list</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                :\r\n                <Modal\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <AlertMessage details={detailsAlertMessage}/>\r\n                </Modal>\r\n            }\r\n        </>\r\n    );\r\n} \r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\AlertMessage.js",["150"],"import React, {useState} from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AlertMessage(props) {\r\n    const [show, setShow] = useState(true);\r\n    const btnContent = props.details.content.button\r\n    console.log(btnContent)\r\n    let history = useHistory();\r\n\r\n    const handleRouteHideBtn = () => {\r\n        history.push(props.details.hideBtn.route);\r\n    }\r\n\r\n    const DisplayHideBtn = () => {\r\n        return (\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={() => setShow(false), handleRouteHideBtn} variant={\"outline-\" + props.details.variant}>\r\n                    {btnContent}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Alert show={show} variant={props.details.variant}>\r\n            <Alert.Heading>{props.details.content.title}</Alert.Heading>\r\n            <p>{props.details.content.description}</p>\r\n            {props.details.hideBtn.display ?\r\n                <DisplayHideBtn/>\r\n                : null}\r\n        </Alert>\r\n    );\r\n}\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\utils.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\tabs\\MyListTab.js",["151","152","153","154","155"],"import React, {useEffect, useState} from 'react';\r\nimport {IMG_BASE_URL, watchStatus, COLORS_BORDER_LEFT_STATUS, deleteMovieContent} from '../../strings'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport ModalAction from '../ModalAction'\r\nimport MyMovies from '../../../utils/MyMovies'\r\n\r\nexport default function MyListTab(props) {\r\n    const [myMovies, setMyMovies] = useState([])\r\n    const [key, setKey] = useState('All');\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [delMovie, setDelMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setMyMovies(MyMovies.getMoviesLocalStorage(props.movies));\r\n    }, [myMovies])\r\n\r\n    const determineColorStatus = (statusWatching) => {\r\n        for (let i = 0; i < watchStatus.length; i++) {\r\n            switch (statusWatching) {\r\n                case watchStatus[i]:\r\n                    return COLORS_BORDER_LEFT_STATUS[i].slice(COLORS_BORDER_LEFT_STATUS[i].length - 7)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showRatingNumber = (rating) => {\r\n        // Check if the third character in the string is a 0, because if it is then the rating is 10\r\n        // else it will be the ')' bracket for which we have to return the second character in the string\r\n        if (rating.charAt(2) === \"0\") {\r\n            return rating.charAt(1) + rating.charAt(2)\r\n        } else {\r\n            return rating.charAt(1)\r\n        }\r\n    }\r\n\r\n    const handleClickDelete = (movie) => {\r\n        setDelMovie(movie)\r\n        setModalShow(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"heading-page\">My List</h1>\r\n            {myMovies.length ? // If length of movies array is not 0 then return table of movies\r\n                <>\r\n                    <Tabs\r\n                        defaultActiveKey=\"All\"\r\n                        id=\"controlled-tab-example\"\r\n                        activeKey={key}\r\n                        onSelect={(k) => setKey(k)}>\r\n                        <Tab eventKey=\"All\" title=\"All Movies\"/>\r\n                        {watchStatus.map(status => {\r\n                            return <Tab eventKey={status} title={status}/>\r\n                        })}\r\n                    </Tabs>\r\n                    <table className=\"table-my-list\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{width: '5px'}}></th>\r\n                                <th style={{width: '20px', textAlign: 'center'}}>#</th>\r\n                                <th style={{width: '70px', textAlign: 'center'}}>Image</th>\r\n                                <th>Title</th>\r\n                                <th style={{width: '120px'}}>Date added</th>\r\n                                <th style={{width: '100px', textAlign: 'center'}}>Score</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        {myMovies.map((movie, index) => {\r\n                            // If movie status is equal to current key that is set by tab, then display. Also display everything for key 'All movies'\r\n                            if (movie.userStats.status === key || key === \"All\") {\r\n                                return (\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{backgroundColor: determineColorStatus(movie.userStats.status)}}></td>\r\n                                            <td style={{\r\n                                                color: '#ffd1df',\r\n                                                textAlign: 'center',\r\n                                                fontWeight: 'bold'\r\n                                            }}>{index + 1}</td>\r\n                                            <td>\r\n                                                <img src={IMG_BASE_URL + movie.movie.movieItem.poster_path} width={70}/>\r\n                                            </td>\r\n                                            <td style={{\r\n                                                fontWeight: 'bold',\r\n                                                fontSize: '22px',\r\n                                                letterSpacing: '1px'\r\n                                            }}>{movie.movie.movieItem.original_title}</td>\r\n                                            <td style={{fontSize: '16px'}}>{movie.date}</td>\r\n                                            <td style={{fontWeight: 'bold', fontSize: '22px', textAlign: 'center'}}>\r\n                                                {showRatingNumber(movie.userStats.rating)}\r\n                                            </td>\r\n                                            <td style={{width: '10px', padding: '0 20px'}}>\r\n                                                <i className=\"fa fa-trash delete-trash-icon\" aria-hidden=\"true\"\r\n                                                   onClick={() => {\r\n                                                       handleClickDelete(movie.movie)\r\n                                                   }}></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </table>\r\n                </>\r\n                : <>\r\n                    <p style={{color: 'white'}}>No movies in your list yet...</p>\r\n                    <br/>\r\n                    <img src=\"https://i.imgur.com/sUpua6W.gif\"/>\r\n                </>}\r\n\r\n            {modalShow ?\r\n                <ModalAction\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    movie={delMovie}\r\n                    movies={myMovies}\r\n                    content={{\r\n                        title: deleteMovieContent.title,\r\n                        description: deleteMovieContent.description,\r\n                        btnTxt: deleteMovieContent.btnTxt\r\n                    }}/>\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\tabs\\PopularTab.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\ModalAction.js",["156","157","158","159","160","161","162"],"import React, {useState, useEffect} from 'react'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction ModalAction(props) {\r\n    const [movieId, setMovieId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (props.movie != null) {\r\n            console.log(props.movie.movieItem.id)\r\n            setMovieId(props.movie.movieItem.id)\r\n        } else {\r\n            console.log(\"movie object is null\")\r\n        }\r\n    }, [])\r\n\r\n    const deleteMovie = () => {\r\n        props.movies.some(movie => {\r\n            if (movieId == movie.movie.movieItem.id) {\r\n                localStorage.removeItem(movieId.toString())\r\n                console.log(\"deleted movie\")\r\n                props.onHide()\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal variant=\"danger\"\r\n               {...props}\r\n               size=\"lg\"\r\n               aria-labelledby=\"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n            <Modal.Header closeButton style={{backgroundColor: '#dc354566'}}>\r\n                <Modal.Title style={{color: '#dc3545'}} id=\"contained-modal-title-vcenter\">\r\n                    {props.content.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{props.content.description}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {movieId ?\r\n                    <Button variant=\"danger\" onClick={deleteMovie}>{props.content.btnTxt}</Button>\r\n                    : null}\r\n                <Button variant=\"light\" onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalAction","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\MovieList.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\SearchBar.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\Movie.js",["163"],"import React from 'react'\r\nimport {Col} from 'react-grid-system'\r\nimport MovieDetails from './MovieDetails'\r\nimport {useHistory, Route} from \"react-router-dom\";\r\nimport {IMG_BASE_URL} from './strings'\r\n\r\nfunction Movie({movie, genres}) {\r\n    const history = useHistory();\r\n    const genreNames = []\r\n    const genreIds = []\r\n\r\n    const learnMoreMovie = () => {\r\n        const clickedMovie = movie\r\n        history.push(`/details/${movie.original_title}`, {...clickedMovie});\r\n    }\r\n\r\n    // Push genre ids of this movie to array\r\n    movie.genre_ids.map(id => genreIds.push(id))\r\n\r\n    // Map through all possible genres for id and name\r\n    genres.map(genre => {\r\n        genreIds.map(id => {\r\n            if (id === genre.id) {\r\n                genreNames.push(genre.name)\r\n            }\r\n            return true\r\n        })\r\n        return true\r\n    })\r\n\r\n    const genresLen = genreNames.length\r\n\r\n    return (\r\n        <>\r\n            <Col style={{margin: '20px 0'}}>\r\n                <Route\r\n                    path={`details/${movie.original_title}`}\r\n                    render={movie => (\r\n                        <MovieDetails {...movie} movie={movie}/>\r\n                    )}\r\n                />\r\n                <div className=\"card-movie\">\r\n                    <img className=\"poster-img\" onClick={learnMoreMovie} src={IMG_BASE_URL + movie.poster_path}></img>\r\n                    <p className=\"title\">{movie.original_title}</p>\r\n                    <p className=\"genres\">{genreNames.map((name, i) => {\r\n                        // Last item in array with no comma\r\n                        if (genresLen === i + 1) {\r\n                            return name\r\n                        } else {\r\n                            return name + \", \"\r\n                        }\r\n                    })}\r\n                    </p>\r\n                </div>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie","C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\components\\layout\\tabs\\TopMoviesTab.js",["164","165","166","167","168","169"],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\services\\MovieService.js",[],"C:\\Users\\bruno\\Documents\\GitHub\\react-projects\\movie-app\\frontend\\src\\utils\\MyMovies.js",["170","171"],"class MyMovies {\r\n    getMoviesLocalStorage (moviesProps){\r\n        let ids = []\r\n        let movies = []\r\n\r\n        // Loop through all movies and add ids to list\r\n        moviesProps.map(movie => {\r\n            ids.push(movie.id)\r\n        })\r\n\r\n        // Loop through all ids and getItems from localstorage based on id, if this doesn't return null then add movie to list\r\n        ids.map(id => {\r\n            let storedMovie = JSON.parse(localStorage.getItem(id.toString()))\r\n            if (storedMovie != null) movies.push(storedMovie[0])\r\n        })\r\n\r\n        return movies\r\n    }\r\n}\r\n\r\nexport default new MyMovies();",{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":12,"column":9,"nodeType":"178","messageId":"179","endLine":12,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":12,"column":29,"nodeType":"182","endLine":12,"endColumn":118},{"ruleId":"180","severity":1,"message":"181","line":39,"column":21,"nodeType":"182","endLine":39,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":27,"column":29,"nodeType":"182","endLine":33,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":38,"column":29,"nodeType":"182","endLine":44,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":29,"column":25,"nodeType":"182","endLine":29,"endColumn":111},{"ruleId":"183","severity":1,"message":"184","line":57,"column":33,"nodeType":"185","messageId":"186","endLine":57,"endColumn":35},{"ruleId":"187","severity":1,"message":"188","line":76,"column":9,"nodeType":"189","messageId":"190","endLine":94,"endColumn":10},{"ruleId":"187","severity":1,"message":"188","line":79,"column":21,"nodeType":"189","messageId":"190","endLine":83,"endColumn":22},{"ruleId":"187","severity":1,"message":"188","line":88,"column":21,"nodeType":"189","messageId":"190","endLine":92,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":19,"column":54,"nodeType":"193","messageId":"194","endLine":19,"endColumn":55},{"ruleId":"195","severity":1,"message":"196","line":16,"column":8,"nodeType":"197","endLine":16,"endColumn":18,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"188","line":20,"column":13,"nodeType":"189","messageId":"190","endLine":23,"endColumn":14},{"ruleId":"183","severity":1,"message":"199","line":69,"column":54,"nodeType":"185","messageId":"186","endLine":69,"endColumn":56},{"ruleId":"180","severity":1,"message":"181","line":82,"column":49,"nodeType":"182","endLine":82,"endColumn":121},{"ruleId":"180","severity":1,"message":"181","line":109,"column":21,"nodeType":"182","endLine":109,"endColumn":65},{"ruleId":"176","severity":1,"message":"200","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":17},{"ruleId":"176","severity":1,"message":"201","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"202","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"203","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"195","severity":1,"message":"204","line":19,"column":8,"nodeType":"197","endLine":19,"endColumn":10,"suggestions":"205"},{"ruleId":"183","severity":1,"message":"184","line":22,"column":33,"nodeType":"185","messageId":"186","endLine":22,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":23,"column":25,"nodeType":"208","messageId":"209","endLine":23,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":43,"column":21,"nodeType":"182","endLine":43,"endColumn":113},{"ruleId":"195","severity":1,"message":"210","line":14,"column":8,"nodeType":"197","endLine":14,"endColumn":18,"suggestions":"211"},{"ruleId":"187","severity":1,"message":"188","line":42,"column":9,"nodeType":"189","messageId":"190","endLine":61,"endColumn":10},{"ruleId":"183","severity":1,"message":"212","line":65,"column":27,"nodeType":"185","messageId":"186","endLine":65,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":136,"column":49,"nodeType":"182","endLine":137,"endColumn":84},{"ruleId":"183","severity":1,"message":"199","line":149,"column":71,"nodeType":"185","messageId":"186","endLine":149,"endColumn":73},{"ruleId":"183","severity":1,"message":"199","line":156,"column":71,"nodeType":"185","messageId":"186","endLine":156,"endColumn":73},{"ruleId":"183","severity":1,"message":"213","line":7,"column":31,"nodeType":"185","messageId":"214","endLine":7,"endColumn":33},{"ruleId":"183","severity":1,"message":"213","line":12,"column":20,"nodeType":"185","messageId":"214","endLine":12,"endColumn":22},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'deleteMovie' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.movies'. Either include it or remove the dependency array. If 'setMyMovies' needs the current value of 'props.movies', you can also switch to useReducer instead of useState and read 'props.movies' in the reducer.","ArrayExpression",["217"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'props.movie'. Either include it or remove the dependency array.",["218"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.",["219"],"Array.prototype.sort() expects a value to be returned at the end of arrow function.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [myMovies, props.movies]",{"range":"226","text":"227"},"Update the dependencies array to be: [props.movie]",{"range":"228","text":"229"},"Update the dependencies array to be: [movies, myMovies]",{"range":"230","text":"231"},[674,684],"[myMovies, props.movies]",[687,689],"[props.movie]",[548,558],"[movies, myMovies]"]